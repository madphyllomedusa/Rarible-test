/**
 * Tezos Rarible API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { ActivitySort, Order, OrderCurrencies, OrderForm, OrderIds, OrderPagination, OrderStatus } from '../models';
export interface GetCurrenciesByBidOrdersOfItemRequest {
    contract?: string;
    tokenId?: string;
}
export interface GetCurrenciesBySellOrdersOfItemRequest {
    contract?: string;
    tokenId?: string;
}
export interface GetOrderBidsByItemRequest {
    contract?: string;
    tokenId?: string;
    maker?: string;
    origin?: string;
    currencyId?: string;
    status?: Array<OrderStatus>;
    startDate?: number;
    endDate?: number;
    size?: number;
    continuation?: string;
}
export interface GetOrderBidsByMakerRequest {
    maker?: string;
    origin?: string;
    size?: number;
    continuation?: string;
}
export interface GetOrderByHashRequest {
    hash: string;
}
export interface GetOrderByIdsRequest {
    orderIds?: OrderIds;
}
export interface GetOrdersAllRequest {
    origin?: string;
    sort?: ActivitySort;
    status?: Array<OrderStatus>;
    size?: number;
    continuation?: string;
}
export interface GetSellOrderByItemRequest {
    contract?: string;
    tokenId?: string;
    maker?: string;
    origin?: string;
    currencyId?: string;
    status?: Array<OrderStatus>;
    startDate?: number;
    endDate?: number;
    size?: number;
    continuation?: string;
}
export interface GetSellOrdersRequest {
    origin?: string;
    size?: number;
    continuation?: string;
}
export interface GetSellOrdersByCollectionRequest {
    collection?: string;
    origin?: string;
    size?: number;
    continuation?: string;
}
export interface GetSellOrdersByMakerRequest {
    maker?: string;
    origin?: string;
    size?: number;
    continuation?: string;
}
export interface UpsertOrderRequest {
    orderForm?: OrderForm;
}
/**
 *
 */
export declare class OrderControllerApi extends runtime.BaseAPI {
    /**
     * Returns currencies made as payment in all bid orders of the item
     */
    getCurrenciesByBidOrdersOfItemRaw(requestParameters: GetCurrenciesByBidOrdersOfItemRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<OrderCurrencies>>;
    /**
     * Returns currencies made as payment in all bid orders of the item
     */
    getCurrenciesByBidOrdersOfItem(requestParameters: GetCurrenciesByBidOrdersOfItemRequest, initOverrides?: RequestInit): Promise<OrderCurrencies>;
    /**
     * Returns currencies taken as payment in all sell orders of the item
     */
    getCurrenciesBySellOrdersOfItemRaw(requestParameters: GetCurrenciesBySellOrdersOfItemRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<OrderCurrencies>>;
    /**
     * Returns currencies taken as payment in all sell orders of the item
     */
    getCurrenciesBySellOrdersOfItem(requestParameters: GetCurrenciesBySellOrdersOfItemRequest, initOverrides?: RequestInit): Promise<OrderCurrencies>;
    /**
     * Get order bids by item
     */
    getOrderBidsByItemRaw(requestParameters: GetOrderBidsByItemRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<OrderPagination>>;
    /**
     * Get order bids by item
     */
    getOrderBidsByItem(requestParameters: GetOrderBidsByItemRequest, initOverrides?: RequestInit): Promise<OrderPagination>;
    /**
     * Get order bids by maker
     */
    getOrderBidsByMakerRaw(requestParameters: GetOrderBidsByMakerRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<OrderPagination>>;
    /**
     * Get order bids by maker
     */
    getOrderBidsByMaker(requestParameters: GetOrderBidsByMakerRequest, initOverrides?: RequestInit): Promise<OrderPagination>;
    /**
     * Get order by hash
     */
    getOrderByHashRaw(requestParameters: GetOrderByHashRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Order>>;
    /**
     * Get order by hash
     */
    getOrderByHash(requestParameters: GetOrderByHashRequest, initOverrides?: RequestInit): Promise<Order>;
    /**
     * Get order by ids
     */
    getOrderByIdsRaw(requestParameters: GetOrderByIdsRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<Order>>>;
    /**
     * Get order by ids
     */
    getOrderByIds(requestParameters: GetOrderByIdsRequest, initOverrides?: RequestInit): Promise<Array<Order>>;
    /**
     * Get all orders
     */
    getOrdersAllRaw(requestParameters: GetOrdersAllRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<OrderPagination>>;
    /**
     * Get all orders
     */
    getOrdersAll(requestParameters: GetOrdersAllRequest, initOverrides?: RequestInit): Promise<OrderPagination>;
    /**
     * Get sell order by item
     */
    getSellOrderByItemRaw(requestParameters: GetSellOrderByItemRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<OrderPagination>>;
    /**
     * Get sell order by item
     */
    getSellOrderByItem(requestParameters: GetSellOrderByItemRequest, initOverrides?: RequestInit): Promise<OrderPagination>;
    /**
     * Get sell orders
     */
    getSellOrdersRaw(requestParameters: GetSellOrdersRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<OrderPagination>>;
    /**
     * Get sell orders
     */
    getSellOrders(requestParameters: GetSellOrdersRequest, initOverrides?: RequestInit): Promise<OrderPagination>;
    /**
     * Get sell orders by collection
     */
    getSellOrdersByCollectionRaw(requestParameters: GetSellOrdersByCollectionRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<OrderPagination>>;
    /**
     * Get sell orders by collection
     */
    getSellOrdersByCollection(requestParameters: GetSellOrdersByCollectionRequest, initOverrides?: RequestInit): Promise<OrderPagination>;
    /**
     * Get sell order by maker
     */
    getSellOrdersByMakerRaw(requestParameters: GetSellOrdersByMakerRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<OrderPagination>>;
    /**
     * Get sell order by maker
     */
    getSellOrdersByMaker(requestParameters: GetSellOrdersByMakerRequest, initOverrides?: RequestInit): Promise<OrderPagination>;
    /**
     * Create or update an order
     */
    upsertOrderRaw(requestParameters: UpsertOrderRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Order>>;
    /**
     * Create or update an order
     */
    upsertOrder(requestParameters: UpsertOrderRequest, initOverrides?: RequestInit): Promise<Order>;
}
