/**
 * Tezos Rarible API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { NftItem, NftItemMeta, NftItemRoyalties, NftItems } from '../models';
export interface GetNftAllItemsRequest {
    lastUpdateFrom?: string;
    lastUpdateTo?: string;
    showDeleted?: boolean;
    includeMeta?: boolean;
    size?: number;
    continuation?: string;
}
export interface GetNftItemByIdRequest {
    itemId: string;
    includeMeta?: boolean;
}
export interface GetNftItemMetaByIdRequest {
    itemId: string;
}
export interface GetNftItemRoyaltiesRequest {
    itemId: string;
}
export interface GetNftItemsByCollectionRequest {
    collection?: string;
    includeMeta?: boolean;
    size?: number;
    continuation?: string;
}
export interface GetNftItemsByCreatorRequest {
    creator?: string;
    includeMeta?: boolean;
    size?: number;
    continuation?: string;
}
export interface GetNftItemsByOwnerRequest {
    owner?: string;
    includeMeta?: boolean;
    size?: number;
    continuation?: string;
}
export interface ResetNftItemMetaByIdRequest {
    itemId: string;
}
/**
 *
 */
export declare class NftItemControllerApi extends runtime.BaseAPI {
    /**
     * Returns all NFT items
     */
    getNftAllItemsRaw(requestParameters: GetNftAllItemsRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<NftItems>>;
    /**
     * Returns all NFT items
     */
    getNftAllItems(requestParameters: GetNftAllItemsRequest, initOverrides?: RequestInit): Promise<NftItems>;
    /**
     * Get NFT item by id
     */
    getNftItemByIdRaw(requestParameters: GetNftItemByIdRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<NftItem>>;
    /**
     * Get NFT item by id
     */
    getNftItemById(requestParameters: GetNftItemByIdRequest, initOverrides?: RequestInit): Promise<NftItem>;
    /**
     * Get NFT item by meta id
     */
    getNftItemMetaByIdRaw(requestParameters: GetNftItemMetaByIdRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<NftItemMeta>>;
    /**
     * Get NFT item by meta id
     */
    getNftItemMetaById(requestParameters: GetNftItemMetaByIdRequest, initOverrides?: RequestInit): Promise<NftItemMeta>;
    /**
     * Get NFT item royalties
     */
    getNftItemRoyaltiesRaw(requestParameters: GetNftItemRoyaltiesRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<NftItemRoyalties>>;
    /**
     * Get NFT item royalties
     */
    getNftItemRoyalties(requestParameters: GetNftItemRoyaltiesRequest, initOverrides?: RequestInit): Promise<NftItemRoyalties>;
    /**
     * Get NFT items by collection
     */
    getNftItemsByCollectionRaw(requestParameters: GetNftItemsByCollectionRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<NftItems>>;
    /**
     * Get NFT items by collection
     */
    getNftItemsByCollection(requestParameters: GetNftItemsByCollectionRequest, initOverrides?: RequestInit): Promise<NftItems>;
    /**
     * Get NFT items by creator
     */
    getNftItemsByCreatorRaw(requestParameters: GetNftItemsByCreatorRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<NftItems>>;
    /**
     * Get NFT items by creator
     */
    getNftItemsByCreator(requestParameters: GetNftItemsByCreatorRequest, initOverrides?: RequestInit): Promise<NftItems>;
    /**
     * Get NFT items by owner
     */
    getNftItemsByOwnerRaw(requestParameters: GetNftItemsByOwnerRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<NftItems>>;
    /**
     * Get NFT items by owner
     */
    getNftItemsByOwner(requestParameters: GetNftItemsByOwnerRequest, initOverrides?: RequestInit): Promise<NftItems>;
    /**
     * Deletes the NFT item meta by identifier
     */
    resetNftItemMetaByIdRaw(requestParameters: ResetNftItemMetaByIdRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>>;
    /**
     * Deletes the NFT item meta by identifier
     */
    resetNftItemMetaById(requestParameters: ResetNftItemMetaByIdRequest, initOverrides?: RequestInit): Promise<void>;
}
