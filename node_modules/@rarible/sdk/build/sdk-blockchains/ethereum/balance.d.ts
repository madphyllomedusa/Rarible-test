import type { RaribleSdk } from "@rarible/protocol-ethereum-sdk";
import type { UnionAddress } from "@rarible/types";
import type { BigNumberValue } from "@rarible/utils";
import type { IBlockchainTransaction } from "@rarible/sdk-transaction";
import type { EthereumNetwork } from "@rarible/protocol-ethereum-sdk/build/types";
import type { ConvertRequest } from "../../types/balances";
import type { RequestCurrency } from "../../common/domain";
export declare class EthereumBalance {
    private sdk;
    private network;
    constructor(sdk: RaribleSdk, network: EthereumNetwork);
    getBalance(address: UnionAddress, currency: RequestCurrency): Promise<BigNumberValue>;
    convert(request: ConvertRequest): Promise<IBlockchainTransaction>;
}
