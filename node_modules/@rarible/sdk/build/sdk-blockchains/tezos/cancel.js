"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TezosCancel = void 0;
var tslib_1 = require("tslib");
var action_1 = require("@rarible/action");
var main_1 = require("@rarible/tezos-sdk/dist/main");
var sdk_transaction_1 = require("@rarible/sdk-transaction");
var bignumber_js_1 = tslib_1.__importDefault(require("bignumber.js"));
var common_1 = require("./common");
var TezosCancel = /** @class */ (function () {
    function TezosCancel(provider, apis, network) {
        var _this = this;
        this.provider = provider;
        this.apis = apis;
        this.network = network;
        this.cancel = action_1.Action.create({
            id: "send-tx",
            run: function (request) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var order, orderForm, tx;
                var _a, _b;
                return tslib_1.__generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, this.apis.order.getOrderByHash({
                                hash: (0, common_1.getTezosOrderId)(request.orderId),
                            })];
                        case 1:
                            order = _c.sent();
                            orderForm = {
                                type: order.type,
                                maker: order.maker,
                                maker_edpk: order.makerEdpk,
                                taker: order.taker,
                                taker_edpk: order.takerEdpk,
                                make: (0, common_1.covertToLibAsset)(order.make),
                                take: (0, common_1.covertToLibAsset)(order.take),
                                salt: order.salt,
                                start: order.start,
                                end: order.end,
                                signature: order.signature,
                                data: {
                                    data_type: "V1",
                                    payouts: (_a = order.data.payouts) === null || _a === void 0 ? void 0 : _a.map(function (payout) { return ({
                                        account: payout.account,
                                        value: new bignumber_js_1.default(payout.value),
                                    }); }),
                                    origin_fees: (_b = order.data.originFees) === null || _b === void 0 ? void 0 : _b.map(function (fee) { return ({
                                        account: fee.account,
                                        value: new bignumber_js_1.default(fee.value),
                                    }); }),
                                },
                            };
                            return [4 /*yield*/, (0, main_1.cancel)((0, common_1.getRequiredProvider)(this.provider), orderForm, false)];
                        case 2:
                            tx = _c.sent();
                            return [2 /*return*/, new sdk_transaction_1.BlockchainTezosTransaction(tx, this.network)];
                    }
                });
            }); },
        });
    }
    return TezosCancel;
}());
exports.TezosCancel = TezosCancel;
