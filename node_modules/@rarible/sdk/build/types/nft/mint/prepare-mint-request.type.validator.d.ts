import * as apiTypes from './prepare-mint-request.type';
export declare const SCHEMA: {
    $schema: string;
    definitions: {
        PrepareMintRequest: {
            anyOf: ({
                type: string;
                additionalProperties: boolean;
                properties: {
                    collection: {
                        $ref: string;
                    };
                    tokenId: {
                        $ref: string;
                    };
                    collectionId?: undefined;
                };
                required: string[];
            } | {
                type: string;
                additionalProperties: boolean;
                properties: {
                    collectionId: {
                        $ref: string;
                    };
                    tokenId: {
                        $ref: string;
                    };
                    collection?: undefined;
                };
                required: string[];
            })[];
        };
        TokenId: {
            type: string;
            properties: {
                tokenId: {
                    type: string;
                };
                signature: {
                    type: string;
                    properties: {
                        v: {
                            type: string;
                        };
                        r: {
                            $ref: string;
                        };
                        s: {
                            $ref: string;
                        };
                    };
                    required: string[];
                    additionalProperties: boolean;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        Binary: {
            type: string;
        };
        Collection: {
            type: string;
            properties: {
                id: {
                    $ref: string;
                };
                parent: {
                    $ref: string;
                };
                blockchain: {
                    $ref: string;
                };
                type: {
                    $ref: string;
                };
                name: {
                    type: string;
                };
                symbol: {
                    type: string;
                };
                owner: {
                    $ref: string;
                };
                features: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                minters: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                meta: {
                    $ref: string;
                };
                bestBidOrder: {
                    $ref: string;
                };
                bestSellOrder: {
                    $ref: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        CollectionId: {
            type: string;
        };
        Blockchain: {
            type: string;
            enum: string[];
        };
        CollectionType: {
            type: string;
            enum: string[];
        };
        UnionAddress: {
            type: string;
        };
        CollectionFeatures: {
            type: string;
            enum: string[];
        };
        CollectionMeta: {
            type: string;
            properties: {
                name: {
                    type: string;
                };
                description: {
                    type: string;
                };
                content: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                externalLink: {
                    type: string;
                };
                sellerFeeBasisPoints: {
                    type: string;
                };
                feeRecipient: {
                    $ref: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        MetaContent: {
            anyOf: {
                $ref: string;
            }[];
        };
        ImageContent: {
            type: string;
            properties: {
                "@type": {
                    type: string;
                    const: string;
                };
                url: {
                    type: string;
                };
                representation: {
                    $ref: string;
                };
                mimeType: {
                    type: string;
                };
                size: {
                    type: string;
                };
                width: {
                    type: string;
                };
                height: {
                    type: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        MetaContentRepresentation: {
            type: string;
            enum: string[];
        };
        VideoContent: {
            type: string;
            properties: {
                "@type": {
                    type: string;
                    const: string;
                };
                url: {
                    type: string;
                };
                representation: {
                    $ref: string;
                };
                mimeType: {
                    type: string;
                };
                size: {
                    type: string;
                };
                width: {
                    type: string;
                };
                height: {
                    type: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        AudioContent: {
            type: string;
            properties: {
                "@type": {
                    type: string;
                    const: string;
                };
                url: {
                    type: string;
                };
                representation: {
                    $ref: string;
                };
                mimeType: {
                    type: string;
                };
                size: {
                    type: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        Model3dContent: {
            type: string;
            properties: {
                "@type": {
                    type: string;
                    const: string;
                };
                url: {
                    type: string;
                };
                representation: {
                    $ref: string;
                };
                mimeType: {
                    type: string;
                };
                size: {
                    type: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        Order: {
            type: string;
            properties: {
                id: {
                    $ref: string;
                };
                fill: {
                    $ref: string;
                };
                platform: {
                    $ref: string;
                };
                status: {
                    $ref: string;
                };
                startedAt: {
                    type: string;
                };
                endedAt: {
                    type: string;
                };
                makeStock: {
                    $ref: string;
                };
                cancelled: {
                    type: string;
                };
                createdAt: {
                    type: string;
                };
                lastUpdatedAt: {
                    type: string;
                };
                makePrice: {
                    $ref: string;
                };
                takePrice: {
                    $ref: string;
                };
                makePriceUsd: {
                    $ref: string;
                };
                takePriceUsd: {
                    $ref: string;
                };
                priceHistory: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                maker: {
                    $ref: string;
                };
                taker: {
                    $ref: string;
                };
                make: {
                    $ref: string;
                };
                take: {
                    $ref: string;
                };
                salt: {
                    type: string;
                };
                signature: {
                    type: string;
                };
                pending: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                data: {
                    $ref: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        OrderId: {
            type: string;
        };
        BigNumber: {
            type: string;
        };
        Platform: {
            type: string;
            enum: string[];
        };
        OrderStatus: {
            type: string;
            enum: string[];
        };
        OrderPriceHistoryRecord: {
            type: string;
            properties: {
                date: {
                    type: string;
                };
                makeValue: {
                    $ref: string;
                };
                takeValue: {
                    $ref: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        Asset: {
            type: string;
            properties: {
                type: {
                    $ref: string;
                };
                value: {
                    $ref: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        AssetType: {
            anyOf: {
                $ref: string;
            }[];
        };
        FlowAssetTypeNft: {
            type: string;
            properties: {
                "@type": {
                    type: string;
                    const: string;
                };
                contract: {
                    $ref: string;
                };
                tokenId: {
                    $ref: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        ContractAddress: {
            type: string;
        };
        FlowAssetTypeFt: {
            type: string;
            properties: {
                "@type": {
                    type: string;
                    const: string;
                };
                contract: {
                    $ref: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        TezosXTZAssetType: {
            type: string;
            properties: {
                "@type": {
                    type: string;
                    const: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        TezosFTAssetType: {
            type: string;
            properties: {
                "@type": {
                    type: string;
                    const: string;
                };
                contract: {
                    $ref: string;
                };
                tokenId: {
                    $ref: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        TezosNFTAssetType: {
            type: string;
            properties: {
                "@type": {
                    type: string;
                    const: string;
                };
                contract: {
                    $ref: string;
                };
                tokenId: {
                    $ref: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        TezosMTAssetType: {
            type: string;
            properties: {
                "@type": {
                    type: string;
                    const: string;
                };
                contract: {
                    $ref: string;
                };
                tokenId: {
                    $ref: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        EthEthereumAssetType: {
            type: string;
            properties: {
                "@type": {
                    type: string;
                    const: string;
                };
                blockchain: {
                    $ref: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        EthErc20AssetType: {
            type: string;
            properties: {
                "@type": {
                    type: string;
                    const: string;
                };
                contract: {
                    $ref: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        EthErc721AssetType: {
            type: string;
            properties: {
                "@type": {
                    type: string;
                    const: string;
                };
                contract: {
                    $ref: string;
                };
                tokenId: {
                    $ref: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        EthErc721LazyAssetType: {
            type: string;
            properties: {
                "@type": {
                    type: string;
                    const: string;
                };
                contract: {
                    $ref: string;
                };
                tokenId: {
                    $ref: string;
                };
                uri: {
                    type: string;
                };
                creators: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                royalties: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                signatures: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        Creator: {
            type: string;
            properties: {
                account: {
                    $ref: string;
                };
                value: {
                    type: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        Royalty: {
            type: string;
            properties: {
                account: {
                    $ref: string;
                };
                value: {
                    type: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        EthErc1155AssetType: {
            type: string;
            properties: {
                "@type": {
                    type: string;
                    const: string;
                };
                contract: {
                    $ref: string;
                };
                tokenId: {
                    $ref: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        EthErc1155LazyAssetType: {
            type: string;
            properties: {
                "@type": {
                    type: string;
                    const: string;
                };
                contract: {
                    $ref: string;
                };
                tokenId: {
                    $ref: string;
                };
                uri: {
                    type: string;
                };
                supply: {
                    $ref: string;
                };
                creators: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                royalties: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                signatures: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        EthCryptoPunksAssetType: {
            type: string;
            properties: {
                "@type": {
                    type: string;
                    const: string;
                };
                contract: {
                    $ref: string;
                };
                tokenId: {
                    type: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        EthGenerativeArtAssetType: {
            type: string;
            properties: {
                "@type": {
                    type: string;
                    const: string;
                };
                contract: {
                    $ref: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        EthCollectionAssetType: {
            type: string;
            properties: {
                "@type": {
                    type: string;
                    const: string;
                };
                contract: {
                    $ref: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        SolanaNftAssetType: {
            type: string;
            properties: {
                "@type": {
                    type: string;
                    const: string;
                };
                itemId: {
                    $ref: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        ItemId: {
            type: string;
        };
        SolanaFtAssetType: {
            type: string;
            properties: {
                "@type": {
                    type: string;
                    const: string;
                };
                address: {
                    $ref: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        SolanaSolAssetType: {
            type: string;
            properties: {
                "@type": {
                    type: string;
                    const: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        PendingOrder: {
            anyOf: {
                $ref: string;
            }[];
        };
        PendingOrderCancel: {
            type: string;
            properties: {
                "@type": {
                    type: string;
                    const: string;
                };
                id: {
                    $ref: string;
                };
                make: {
                    $ref: string;
                };
                take: {
                    $ref: string;
                };
                date: {
                    type: string;
                };
                maker: {
                    $ref: string;
                };
                owner: {
                    $ref: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        PendingOrderMatch: {
            type: string;
            properties: {
                "@type": {
                    type: string;
                    const: string;
                };
                id: {
                    $ref: string;
                };
                make: {
                    $ref: string;
                };
                take: {
                    $ref: string;
                };
                date: {
                    type: string;
                };
                maker: {
                    $ref: string;
                };
                side: {
                    $ref: string;
                };
                fill: {
                    $ref: string;
                };
                taker: {
                    $ref: string;
                };
                counterHash: {
                    type: string;
                };
                makeUsd: {
                    $ref: string;
                };
                takeUsd: {
                    $ref: string;
                };
                makePriceUsd: {
                    $ref: string;
                };
                takePriceUsd: {
                    $ref: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        PendingOrderMatchSide: {
            type: string;
            enum: string[];
        };
        OnChainOrder: {
            type: string;
            properties: {
                "@type": {
                    type: string;
                    const: string;
                };
                id: {
                    $ref: string;
                };
                make: {
                    $ref: string;
                };
                take: {
                    $ref: string;
                };
                date: {
                    type: string;
                };
                maker: {
                    $ref: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        OrderData: {
            anyOf: {
                $ref: string;
            }[];
        };
        EthOrderDataLegacy: {
            type: string;
            properties: {
                "@type": {
                    type: string;
                    const: string;
                };
                fee: {
                    $ref: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        EthOrderDataRaribleV2DataV1: {
            type: string;
            properties: {
                "@type": {
                    type: string;
                    const: string;
                };
                payouts: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                originFees: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        Payout: {
            type: string;
            properties: {
                account: {
                    $ref: string;
                };
                value: {
                    type: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        EthOrderOpenSeaV1DataV1: {
            type: string;
            properties: {
                "@type": {
                    type: string;
                    const: string;
                };
                exchange: {
                    $ref: string;
                };
                makerRelayerFee: {
                    $ref: string;
                };
                takerRelayerFee: {
                    $ref: string;
                };
                makerProtocolFee: {
                    $ref: string;
                };
                takerProtocolFee: {
                    $ref: string;
                };
                feeRecipient: {
                    $ref: string;
                };
                feeMethod: {
                    $ref: string;
                };
                side: {
                    $ref: string;
                };
                saleKind: {
                    $ref: string;
                };
                howToCall: {
                    $ref: string;
                };
                callData: {
                    type: string;
                };
                replacementPattern: {
                    type: string;
                };
                staticTarget: {
                    $ref: string;
                };
                staticExtraData: {
                    type: string;
                };
                extra: {
                    $ref: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        EthOrderOpenSeaV1DataV1FeeMethod: {
            type: string;
            enum: string[];
        };
        EthOrderOpenSeaV1DataV1Side: {
            type: string;
            enum: string[];
        };
        EthOrderOpenSeaV1DataV1SaleKind: {
            type: string;
            enum: string[];
        };
        EthOrderOpenSeaV1DataV1HowToCall: {
            type: string;
            enum: string[];
        };
        EthOrderCryptoPunksData: {
            type: string;
            properties: {
                "@type": {
                    type: string;
                    const: string;
                };
                stub: {
                    type: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        TezosOrderDataRaribleV2DataV1: {
            type: string;
            properties: {
                "@type": {
                    type: string;
                    const: string;
                };
                payouts: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                originFees: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                makerEdpk: {
                    type: string;
                };
                takerEdpk: {
                    type: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        FlowOrderDataV1: {
            type: string;
            properties: {
                "@type": {
                    type: string;
                    const: string;
                };
                payouts: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                originFees: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        SolanaAuctionHouseDataV1: {
            type: string;
            properties: {
                "@type": {
                    type: string;
                    const: string;
                };
                auctionHouse: {
                    $ref: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        HasCollection: {
            type: string;
            properties: {
                collection: {
                    $ref: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        HasCollectionId: {
            type: string;
            properties: {
                collectionId: {
                    $ref: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
    };
};
export declare function validatePrepareMintRequest(payload: unknown): apiTypes.PrepareMintRequest;
export declare function isPrepareMintRequest(payload: unknown): payload is apiTypes.PrepareMintRequest;
export declare function validateHasCollection(payload: unknown): apiTypes.HasCollection;
export declare function isHasCollection(payload: unknown): payload is apiTypes.HasCollection;
export declare function validateHasCollectionId(payload: unknown): apiTypes.HasCollectionId;
export declare function isHasCollectionId(payload: unknown): payload is apiTypes.HasCollectionId;
