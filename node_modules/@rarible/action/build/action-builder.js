"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ActionBuilder = void 0;
var tslib_1 = require("tslib");
var callable_instance_1 = (0, tslib_1.__importDefault)(require("callable-instance"));
var ActionBuilder = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(ActionBuilder, _super);
    function ActionBuilder() {
        return _super.call(this, "instanceMethod") || this;
    }
    ActionBuilder.prototype.instanceMethod = function (ctx, input) {
        return this.start(ctx, input).result;
    };
    ActionBuilder.prototype.start = function (ctx, input) {
        return this.build(ctx).start(input);
    };
    ActionBuilder.prototype.before = function (map) {
        return new BeforeActionBuilder(this, map);
    };
    ActionBuilder.prototype.after = function (map) {
        return new AfterActionBuilder(this, map);
    };
    ActionBuilder.prototype.thenActionBuilder = function (ab) {
        return new ThenActionBuilder(this, ab);
    };
    ActionBuilder.create = function (build) {
        return new SimpleActionBuilder(build);
    };
    return ActionBuilder;
}(callable_instance_1.default));
exports.ActionBuilder = ActionBuilder;
var BeforeActionBuilder = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(BeforeActionBuilder, _super);
    function BeforeActionBuilder(source, map) {
        var _this = _super.call(this) || this;
        _this.source = source;
        _this.map = map;
        return _this;
    }
    BeforeActionBuilder.prototype.build = function (ctx) {
        var action = this.source.build(ctx);
        return action.before(this.map);
    };
    return BeforeActionBuilder;
}(ActionBuilder));
var AfterActionBuilder = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(AfterActionBuilder, _super);
    function AfterActionBuilder(source, map) {
        var _this = _super.call(this) || this;
        _this.source = source;
        _this.map = map;
        return _this;
    }
    AfterActionBuilder.prototype.build = function (ctx) {
        var action = this.source.build(ctx);
        return action.after(this.map);
    };
    return AfterActionBuilder;
}(ActionBuilder));
var ThenActionBuilder = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(ThenActionBuilder, _super);
    function ThenActionBuilder(ab1, ab2) {
        var _this = _super.call(this) || this;
        _this.ab1 = ab1;
        _this.ab2 = ab2;
        return _this;
    }
    ThenActionBuilder.prototype.build = function (ctx) {
        var a1 = this.ab1.build(ctx);
        var a2 = this.ab2.build(ctx);
        return a1.thenAction(a2);
    };
    return ThenActionBuilder;
}(ActionBuilder));
var SimpleActionBuilder = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(SimpleActionBuilder, _super);
    function SimpleActionBuilder(f) {
        var _this = _super.call(this) || this;
        _this.f = f;
        return _this;
    }
    SimpleActionBuilder.prototype.build = function (ctx) {
        return this.f(ctx);
    };
    return SimpleActionBuilder;
}(ActionBuilder));
