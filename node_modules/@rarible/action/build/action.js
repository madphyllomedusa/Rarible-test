"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Action = void 0;
var tslib_1 = require("tslib");
var callable_instance_1 = (0, tslib_1.__importDefault)(require("callable-instance"));
var execution_1 = require("./execution");
var Action = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(Action, _super);
    function Action(steps) {
        var _this = _super.call(this, "instanceMethod") || this;
        _this.steps = steps;
        return _this;
    }
    Action.prototype.instanceMethod = function (input) {
        return this.start(input).runAll();
    };
    Action.prototype.thenStep = function (step) {
        return new Action((0, tslib_1.__spreadArray)((0, tslib_1.__spreadArray)([], this.steps, true), [
            step,
        ], false));
    };
    Action.prototype.thenAction = function (action) {
        return new Action((0, tslib_1.__spreadArray)((0, tslib_1.__spreadArray)([], this.steps, true), action.steps, true));
    };
    Action.prototype.around = function (mapIn, mapOut) {
        var _this = this;
        var steps = this.steps.length;
        return new Action(this.steps.map(function (step, idx) {
            if (idx === 0 && steps === 1) {
                return {
                    id: step.id,
                    run: function (input) { return (0, tslib_1.__awaiter)(_this, void 0, void 0, function () {
                        var value, _a, _b;
                        return (0, tslib_1.__generator)(this, function (_c) {
                            switch (_c.label) {
                                case 0:
                                    _b = (_a = step).run;
                                    return [4 /*yield*/, mapIn(input)];
                                case 1: return [4 /*yield*/, _b.apply(_a, [_c.sent()])];
                                case 2:
                                    value = _c.sent();
                                    return [2 /*return*/, mapOut(value, input)];
                            }
                        });
                    }); },
                };
            }
            else if (idx === 0) {
                return {
                    id: step.id,
                    run: function (input) { return (0, tslib_1.__awaiter)(_this, void 0, void 0, function () {
                        var value, _a, _b;
                        return (0, tslib_1.__generator)(this, function (_c) {
                            switch (_c.label) {
                                case 0:
                                    _b = (_a = step).run;
                                    return [4 /*yield*/, mapIn(input)];
                                case 1: return [4 /*yield*/, _b.apply(_a, [_c.sent()])];
                                case 2:
                                    value = _c.sent();
                                    return [2 /*return*/, { initial: input, value: value }];
                            }
                        });
                    }); },
                };
            }
            else if (idx === steps - 1) {
                return {
                    id: step.id,
                    run: function (prevValue) { return (0, tslib_1.__awaiter)(_this, void 0, void 0, function () {
                        var value;
                        return (0, tslib_1.__generator)(this, function (_a) {
                            switch (_a.label) {
                                case 0: return [4 /*yield*/, step.run(prevValue.value)];
                                case 1:
                                    value = _a.sent();
                                    return [2 /*return*/, mapOut(value, prevValue.initial)];
                            }
                        });
                    }); },
                };
            }
            else {
                return {
                    id: step.id,
                    run: function (prevValue) { return (0, tslib_1.__awaiter)(_this, void 0, void 0, function () {
                        var value;
                        return (0, tslib_1.__generator)(this, function (_a) {
                            switch (_a.label) {
                                case 0: return [4 /*yield*/, step.run(prevValue.value)];
                                case 1:
                                    value = _a.sent();
                                    return [2 /*return*/, { initial: prevValue.initial, value: value }];
                            }
                        });
                    }); },
                };
            }
        }));
    };
    Action.prototype.before = function (map) {
        var _this = this;
        var _a = this.steps, first = _a[0], rest = _a.slice(1);
        return new Action((0, tslib_1.__spreadArray)([
            {
                id: first.id,
                run: function (value) { return (0, tslib_1.__awaiter)(_this, void 0, void 0, function () {
                    var input;
                    return (0, tslib_1.__generator)(this, function (_a) {
                        switch (_a.label) {
                            case 0: return [4 /*yield*/, map(value)];
                            case 1:
                                input = _a.sent();
                                return [2 /*return*/, first.run(input)];
                        }
                    });
                }); },
            }
        ], rest, true));
    };
    Action.prototype.after = function (map) {
        var _this = this;
        var start = this.steps.slice(0, -1);
        var last = this.steps[this.steps.length - 1];
        return new Action((0, tslib_1.__spreadArray)((0, tslib_1.__spreadArray)([], start, true), [
            {
                id: last.id,
                run: function (value) { return (0, tslib_1.__awaiter)(_this, void 0, void 0, function () {
                    var out;
                    return (0, tslib_1.__generator)(this, function (_a) {
                        switch (_a.label) {
                            case 0: return [4 /*yield*/, last.run(value)];
                            case 1:
                                out = _a.sent();
                                return [2 /*return*/, map(out)];
                        }
                    });
                }); },
            },
        ], false));
    };
    Action.prototype.start = function (input) {
        return new execution_1.Execution(input, this.steps);
    };
    Action.create = function (step) {
        return new Action([step]);
    };
    return Action;
}(callable_instance_1.default));
exports.Action = Action;
