"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Web3Transaction = exports.Web3FunctionCall = exports.Web3Contract = exports.Web3Ethereum = void 0;
var tslib_1 = require("tslib");
var ethereum_provider_1 = require("@rarible/ethereum-provider");
var types_1 = require("@rarible/types");
var exponential_backoff_1 = require("exponential-backoff");
var provider_request_1 = require("./utils/provider-request");
var to_promises_1 = require("./utils/to-promises");
var Web3Ethereum = /** @class */ (function () {
    function Web3Ethereum(config) {
        this.config = config;
        this.send = this.send.bind(this);
    }
    Web3Ethereum.prototype.createContract = function (abi, address) {
        return new Web3Contract(this.config, new this.config.web3.eth.Contract(abi, address));
    };
    Web3Ethereum.prototype.send = function (method, params) {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            return (0, tslib_1.__generator)(this, function (_a) {
                return [2 /*return*/, (0, provider_request_1.providerRequest)(this.config.web3.currentProvider, method, params)];
            });
        });
    };
    Web3Ethereum.prototype.personalSign = function (message) {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var signer;
            return (0, tslib_1.__generator)(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getFrom()];
                    case 1:
                        signer = _a.sent();
                        return [2 /*return*/, this.config.web3.eth.personal.sign(message, signer)];
                }
            });
        });
    };
    Web3Ethereum.prototype.signTypedData = function (data) {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var signer;
            return (0, tslib_1.__generator)(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getFrom()];
                    case 1:
                        signer = _a.sent();
                        return [2 /*return*/, (0, ethereum_provider_1.signTypedData)(this.send, signer, data)];
                }
            });
        });
    };
    Web3Ethereum.prototype.getFrom = function () {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            return (0, tslib_1.__generator)(this, function (_a) {
                return [2 /*return*/, getFrom(this.config.web3, this.config.from)];
            });
        });
    };
    Web3Ethereum.prototype.encodeParameter = function (type, parameter) {
        return this.config.web3.eth.abi.encodeParameter(type, parameter);
    };
    Web3Ethereum.prototype.getBalance = function (address) {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var _a;
            return (0, tslib_1.__generator)(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = types_1.toBigNumber;
                        return [4 /*yield*/, this.config.web3.eth.getBalance(address)];
                    case 1: return [2 /*return*/, _a.apply(void 0, [_b.sent()])];
                }
            });
        });
    };
    Web3Ethereum.prototype.getChainId = function () {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            return (0, tslib_1.__generator)(this, function (_a) {
                return [2 /*return*/, this.config.web3.eth.getChainId()];
            });
        });
    };
    return Web3Ethereum;
}());
exports.Web3Ethereum = Web3Ethereum;
var Web3Contract = /** @class */ (function () {
    function Web3Contract(config, contract) {
        this.config = config;
        this.contract = contract;
    }
    Web3Contract.prototype.functionCall = function (name) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        return new Web3FunctionCall(this.config, this.contract, name, args);
    };
    return Web3Contract;
}());
exports.Web3Contract = Web3Contract;
var Web3FunctionCall = /** @class */ (function () {
    function Web3FunctionCall(config, contract, methodName, args) {
        var _a;
        this.config = config;
        this.contract = contract;
        this.methodName = methodName;
        this.args = args;
        this.sendMethod = (_a = this.contract.methods)[this.methodName].apply(_a, this.args);
    }
    Web3FunctionCall.prototype.getCallInfo = function () {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var _a;
            return (0, tslib_1.__generator)(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = {
                            method: this.methodName,
                            contract: this.contract.options.address,
                            args: this.args
                        };
                        return [4 /*yield*/, this.getFrom()];
                    case 1: return [2 /*return*/, (_a.from = _b.sent(),
                            _a)];
                }
            });
        });
    };
    Object.defineProperty(Web3FunctionCall.prototype, "data", {
        get: function () {
            return this.sendMethod.encodeABI();
        },
        enumerable: false,
        configurable: true
    });
    Web3FunctionCall.prototype.estimateGas = function (options) {
        if (options === void 0) { options = {}; }
        return this.sendMethod.estimateGas(options);
    };
    Web3FunctionCall.prototype.call = function (options) {
        var _a;
        if (options === void 0) { options = {}; }
        return this.sendMethod.call({
            from: this.config.from,
            gas: options.gas,
            gasPrice: (_a = options.gasPrice) === null || _a === void 0 ? void 0 : _a.toString(),
        });
    };
    Web3FunctionCall.prototype.send = function (options) {
        var _a;
        if (options === void 0) { options = {}; }
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var from, _b, promiEvent, _c, hash, receipt, hashValue, tx;
            return (0, tslib_1.__generator)(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        _b = types_1.toAddress;
                        return [4 /*yield*/, this.getFrom()];
                    case 1:
                        from = _b.apply(void 0, [_d.sent()]);
                        promiEvent = this.sendMethod.send({
                            from: from,
                            gas: this.config.gas || options.gas,
                            value: options.value,
                            gasPrice: (_a = options.gasPrice) === null || _a === void 0 ? void 0 : _a.toString(),
                        });
                        _c = (0, to_promises_1.toPromises)(promiEvent), hash = _c.hash, receipt = _c.receipt;
                        return [4 /*yield*/, hash];
                    case 2:
                        hashValue = _d.sent();
                        return [4 /*yield*/, this.getTransaction(hashValue)];
                    case 3:
                        tx = _d.sent();
                        return [2 /*return*/, new Web3Transaction(receipt, (0, types_1.toWord)(hashValue), (0, types_1.toBinary)(this.data), tx.nonce, from, (0, types_1.toAddress)(this.contract.options.address))];
                }
            });
        });
    };
    Web3FunctionCall.prototype.getTransaction = function (hash) {
        var _this = this;
        return (0, exponential_backoff_1.backOff)(function () { return (0, tslib_1.__awaiter)(_this, void 0, void 0, function () {
            var value;
            return (0, tslib_1.__generator)(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.config.web3.eth.getTransaction(hash)];
                    case 1:
                        value = _a.sent();
                        if (!value) {
                            throw new Error("No transaction found");
                        }
                        return [2 /*return*/, value];
                }
            });
        }); }, {
            maxDelay: 5000,
            numOfAttempts: 10,
            delayFirstAttempt: true,
            startingDelay: 300,
        });
    };
    Web3FunctionCall.prototype.getFrom = function () {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            return (0, tslib_1.__generator)(this, function (_a) {
                return [2 /*return*/, getFrom(this.config.web3, this.config.from)];
            });
        });
    };
    return Web3FunctionCall;
}());
exports.Web3FunctionCall = Web3FunctionCall;
var Web3Transaction = /** @class */ (function () {
    function Web3Transaction(receipt, hash, data, nonce, from, to) {
        this.receipt = receipt;
        this.hash = hash;
        this.data = data;
        this.nonce = nonce;
        this.from = from;
        this.to = to;
    }
    Web3Transaction.prototype.wait = function () {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var receipt, events;
            return (0, tslib_1.__generator)(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.receipt];
                    case 1:
                        receipt = _a.sent();
                        events = Object.keys(receipt.events)
                            .map(function (ev) { return receipt.events[ev]; })
                            .map(function (ev) { return ((0, tslib_1.__assign)((0, tslib_1.__assign)({}, ev), { args: ev.returnValues })); });
                        return [2 /*return*/, (0, tslib_1.__assign)((0, tslib_1.__assign)({}, receipt), { events: events })];
                }
            });
        });
    };
    return Web3Transaction;
}());
exports.Web3Transaction = Web3Transaction;
function getFrom(web3, from) {
    return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
        var first;
        return (0, tslib_1.__generator)(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (from) {
                        return [2 /*return*/, from];
                    }
                    return [4 /*yield*/, web3.eth.getAccounts()];
                case 1:
                    first = (_a.sent())[0];
                    if (!first) {
                        throw new Error("Wallet is not connected");
                    }
                    return [2 /*return*/, first];
            }
        });
    });
}
