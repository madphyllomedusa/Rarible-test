"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.signUserMessage = void 0;
var tslib_1 = require("tslib");
function signUserMessage(fcl, message) {
    var _a;
    return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
        var currentUser, snapshot, address_1, messageHex, signatures, signature;
        return (0, tslib_1.__generator)(this, function (_b) {
            switch (_b.label) {
                case 0:
                    if (!fcl) return [3 /*break*/, 3];
                    currentUser = fcl.currentUser();
                    return [4 /*yield*/, currentUser.snapshot()];
                case 1:
                    snapshot = _b.sent();
                    address_1 = snapshot.addr;
                    if (!address_1) {
                        throw new Error("Unauthorized request");
                    }
                    messageHex = Buffer.from(message).toString("hex");
                    return [4 /*yield*/, currentUser.signUserMessage(messageHex)];
                case 2:
                    signatures = _b.sent();
                    if (signatures.length) {
                        signature = (_a = signatures.find(function (s) { return s.addr.toLowerCase() === address_1.toLowerCase(); })) === null || _a === void 0 ? void 0 : _a.signature;
                        if (signature) {
                            return [2 /*return*/, signature];
                        }
                        throw new Error("Signature of user address \"".concat(address_1, "\" not found"));
                    }
                    throw new Error("Response of signUserMessage is empty");
                case 3: throw new Error("Fcl is required for signing messages");
            }
        });
    });
}
exports.signUserMessage = signUserMessage;
