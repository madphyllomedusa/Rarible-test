"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getOrderCode = void 0;
var tslib_1 = require("tslib");
var t = (0, tslib_1.__importStar)(require("@onflow/types"));
var flow_sdk_scripts_1 = require("@rarible/flow-sdk-scripts");
var conver_fee_to_cadence_1 = require("../common/conver-fee-to-cadence");
var prepare_order_code_1 = require("./prepare-order-code");
function getOrderCode(fcl, collectionName) {
    return {
        create: function (currency, itemId, fees) {
            return {
                cadence: (0, prepare_order_code_1.prepareOrderCode)(flow_sdk_scripts_1.Storefront.createSellOrder, collectionName, currency),
                args: fcl.args([
                    fcl.arg(itemId, t.UInt64), fcl.arg((0, conver_fee_to_cadence_1.prepareFees)(fees), t.Dictionary({
                        key: t.Address,
                        value: t.UFix64,
                    })),
                ]),
            };
        },
        update: function (currency, orderId, fees) {
            return {
                cadence: (0, prepare_order_code_1.prepareOrderCode)(flow_sdk_scripts_1.Storefront.updateOrder, collectionName, currency),
                args: fcl.args([
                    fcl.arg(orderId, t.UInt64), fcl.arg((0, conver_fee_to_cadence_1.prepareFees)(fees), t.Dictionary({
                        key: t.Address,
                        value: t.UFix64,
                    })),
                ]),
            };
        },
        buy: function (currency, orderId, address, fees) {
            return {
                cadence: (0, prepare_order_code_1.prepareOrderCode)(flow_sdk_scripts_1.Storefront.buy, collectionName, currency),
                args: fcl.args([
                    fcl.arg(orderId, t.UInt64),
                    fcl.arg(address, t.Address),
                    fcl.arg((0, conver_fee_to_cadence_1.prepareFees)(fees), t.Dictionary({ key: t.Address, value: t.UFix64 })),
                ]),
            };
        },
        cancel: function (orderId) {
            return {
                cadence: flow_sdk_scripts_1.Storefront.cancelOrder,
                args: fcl.args([fcl.arg(orderId, t.UInt64)]),
            };
        },
    };
}
exports.getOrderCode = getOrderCode;
