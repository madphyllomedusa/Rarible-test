"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseContractAddress = exports.isFlowAddress = exports.flowAddressRegExp = exports.isFlowContractAddress = exports.toFlowContractAddress = exports.flowContractRegExp = void 0;
var types_1 = require("@rarible/types");
var types_2 = require("../../types");
exports.flowContractRegExp = /^A\.0*x*[0-9a-f]{16}\.[0-9A-Za-z_]{3,}/;
function toFlowContractAddress(str) {
    if (isFlowContractAddress(str)) {
        return str;
    }
    throw new Error("Not an Flow's contract address");
}
exports.toFlowContractAddress = toFlowContractAddress;
function isFlowContractAddress(x) {
    return exports.flowContractRegExp.test(x);
}
exports.isFlowContractAddress = isFlowContractAddress;
exports.flowAddressRegExp = /^0*x*[0-9a-f]{16}/;
function isFlowAddress(x) {
    return exports.flowAddressRegExp.test(x);
}
exports.isFlowAddress = isFlowAddress;
function parseContractAddress(x) {
    var _a = x.split("."), address = _a[1], name = _a[2];
    if (!address || !name) {
        throw new Error("Invalid contract address");
    }
    else if (types_2.NON_FUNGIBLE_CONTRACTS.indexOf(name) === -1) {
        throw new Error("Unknown or not a non-fungible contract name: ".concat(name));
    }
    return {
        address: (0, types_1.toFlowAddress)(address),
        name: name,
    };
}
exports.parseContractAddress = parseContractAddress;
