"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.burn = void 0;
var tslib_1 = require("tslib");
var transaction_1 = require("../common/transaction");
var nft_1 = require("../tx-code-store/nft");
var get_config_1 = require("../common/collection/get-config");
function burn(fcl, auth, network, collection, tokenId) {
    return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
        var _a, config, map, name_1, txId;
        return (0, tslib_1.__generator)(this, function (_b) {
            switch (_b.label) {
                case 0:
                    if (!fcl) return [3 /*break*/, 3];
                    _a = (0, get_config_1.getCollectionConfig)(network, collection), config = _a.config, map = _a.map, name_1 = _a.name;
                    if (!config.features.includes("BURN")) return [3 /*break*/, 2];
                    return [4 /*yield*/, (0, transaction_1.runTransaction)(fcl, map, (0, nft_1.getNftCode)(name_1).burn(fcl, tokenId), auth)];
                case 1:
                    txId = _b.sent();
                    return [2 /*return*/, (0, transaction_1.waitForSeal)(fcl, txId)];
                case 2: throw new Error("This collection doesn't support 'burn' action");
                case 3: throw new Error("Fcl is required for burn");
            }
        });
    });
}
exports.burn = burn;
