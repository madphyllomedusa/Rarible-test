/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { Activities, ActivitySort, ActivityType, Blockchain, UnionApiErrorBadRequest, UnionApiErrorServerError, UserActivityType } from '../models';
export interface GetActivitiesByCollectionRequest {
    type: Array<ActivityType>;
    collection: string;
    continuation?: string;
    cursor?: string;
    size?: number;
    sort?: ActivitySort;
}
export interface GetActivitiesByItemRequest {
    type: Array<ActivityType>;
    itemId: string;
    continuation?: string;
    cursor?: string;
    size?: number;
    sort?: ActivitySort;
}
export interface GetActivitiesByUserRequest {
    type: Array<UserActivityType>;
    user: Array<string>;
    blockchains?: Array<Blockchain>;
    from?: Date;
    to?: Date;
    continuation?: string;
    cursor?: string;
    size?: number;
    sort?: ActivitySort;
}
export interface GetAllActivitiesRequest {
    type: Array<ActivityType>;
    blockchains?: Array<Blockchain>;
    continuation?: string;
    cursor?: string;
    size?: number;
    sort?: ActivitySort;
}
/**
 * no description
 */
export declare class ActivityControllerApi extends runtime.BaseAPI {
    /**
     * Returns activities by collection
     */
    getActivitiesByCollectionRaw(requestParameters: GetActivitiesByCollectionRequest): Promise<GetActivitiesByCollectionResponse>;
    /**
     * Returns activities by collection
     */
    getActivitiesByCollection(requestParameters: GetActivitiesByCollectionRequest): Promise<Activities>;
    /**
     * Returns activities by item
     */
    getActivitiesByItemRaw(requestParameters: GetActivitiesByItemRequest): Promise<GetActivitiesByItemResponse>;
    /**
     * Returns activities by item
     */
    getActivitiesByItem(requestParameters: GetActivitiesByItemRequest): Promise<Activities>;
    /**
     * Returns activities by user
     */
    getActivitiesByUserRaw(requestParameters: GetActivitiesByUserRequest): Promise<GetActivitiesByUserResponse>;
    /**
     * Returns activities by user
     */
    getActivitiesByUser(requestParameters: GetActivitiesByUserRequest): Promise<Activities>;
    /**
     * Returns all activities
     */
    getAllActivitiesRaw(requestParameters: GetAllActivitiesRequest): Promise<GetAllActivitiesResponse>;
    /**
     * Returns all activities
     */
    getAllActivities(requestParameters: GetAllActivitiesRequest): Promise<Activities>;
}
export declare type GetActivitiesByCollection200 = {
    status: 200;
    value: Activities;
};
export declare type GetActivitiesByCollection400 = {
    status: 400;
    value: UnionApiErrorBadRequest;
};
export declare type GetActivitiesByCollection500 = {
    status: 500;
    value: UnionApiErrorServerError;
};
export declare type GetActivitiesByCollectionResponse = GetActivitiesByCollection200 | GetActivitiesByCollection400 | GetActivitiesByCollection500;
export declare type GetActivitiesByItem200 = {
    status: 200;
    value: Activities;
};
export declare type GetActivitiesByItem400 = {
    status: 400;
    value: UnionApiErrorBadRequest;
};
export declare type GetActivitiesByItem500 = {
    status: 500;
    value: UnionApiErrorServerError;
};
export declare type GetActivitiesByItemResponse = GetActivitiesByItem200 | GetActivitiesByItem400 | GetActivitiesByItem500;
export declare type GetActivitiesByUser200 = {
    status: 200;
    value: Activities;
};
export declare type GetActivitiesByUser400 = {
    status: 400;
    value: UnionApiErrorBadRequest;
};
export declare type GetActivitiesByUser500 = {
    status: 500;
    value: UnionApiErrorServerError;
};
export declare type GetActivitiesByUserResponse = GetActivitiesByUser200 | GetActivitiesByUser400 | GetActivitiesByUser500;
export declare type GetAllActivities200 = {
    status: 200;
    value: Activities;
};
export declare type GetAllActivities400 = {
    status: 400;
    value: UnionApiErrorBadRequest;
};
export declare type GetAllActivities500 = {
    status: 500;
    value: UnionApiErrorServerError;
};
export declare type GetAllActivitiesResponse = GetAllActivities200 | GetAllActivities400 | GetAllActivities500;
