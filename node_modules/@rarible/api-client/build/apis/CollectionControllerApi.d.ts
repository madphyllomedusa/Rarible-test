/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { Blockchain, Collection, Collections, UnionApiErrorBadRequest, UnionApiErrorEntityNotFound, UnionApiErrorServerError } from '../models';
export interface GetAllCollectionsRequest {
    blockchains?: Array<Blockchain>;
    continuation?: string;
    size?: number;
}
export interface GetCollectionByIdRequest {
    collection: string;
}
export interface GetCollectionsByOwnerRequest {
    owner: string;
    blockchains?: Array<Blockchain>;
    continuation?: string;
    size?: number;
}
export interface RefreshCollectionMetaRequest {
    collection: string;
}
/**
 * no description
 */
export declare class CollectionControllerApi extends runtime.BaseAPI {
    /**
     * Returns all collections
     */
    getAllCollectionsRaw(requestParameters: GetAllCollectionsRequest): Promise<GetAllCollectionsResponse>;
    /**
     * Returns all collections
     */
    getAllCollections(requestParameters: GetAllCollectionsRequest): Promise<Collections>;
    /**
     * Returns collection by address
     */
    getCollectionByIdRaw(requestParameters: GetCollectionByIdRequest): Promise<GetCollectionByIdResponse>;
    /**
     * Returns collection by address
     */
    getCollectionById(requestParameters: GetCollectionByIdRequest): Promise<Collection>;
    /**
     * Returns collection by owner
     */
    getCollectionsByOwnerRaw(requestParameters: GetCollectionsByOwnerRequest): Promise<GetCollectionsByOwnerResponse>;
    /**
     * Returns collection by owner
     */
    getCollectionsByOwner(requestParameters: GetCollectionsByOwnerRequest): Promise<Collections>;
    /**
     * Refreshes metadata for all items in the NFT collection
     */
    refreshCollectionMetaRaw(requestParameters: RefreshCollectionMetaRequest): Promise<RefreshCollectionMetaResponse>;
    /**
     * Refreshes metadata for all items in the NFT collection
     */
    refreshCollectionMeta(requestParameters: RefreshCollectionMetaRequest): Promise<void>;
}
export declare type GetAllCollections200 = {
    status: 200;
    value: Collections;
};
export declare type GetAllCollections400 = {
    status: 400;
    value: UnionApiErrorBadRequest;
};
export declare type GetAllCollections500 = {
    status: 500;
    value: UnionApiErrorServerError;
};
export declare type GetAllCollectionsResponse = GetAllCollections200 | GetAllCollections400 | GetAllCollections500;
export declare type GetCollectionById200 = {
    status: 200;
    value: Collection;
};
export declare type GetCollectionById404 = {
    status: 404;
    value: UnionApiErrorEntityNotFound;
};
export declare type GetCollectionById400 = {
    status: 400;
    value: UnionApiErrorBadRequest;
};
export declare type GetCollectionById500 = {
    status: 500;
    value: UnionApiErrorServerError;
};
export declare type GetCollectionByIdResponse = GetCollectionById200 | GetCollectionById404 | GetCollectionById400 | GetCollectionById500;
export declare type GetCollectionsByOwner200 = {
    status: 200;
    value: Collections;
};
export declare type GetCollectionsByOwner400 = {
    status: 400;
    value: UnionApiErrorBadRequest;
};
export declare type GetCollectionsByOwner500 = {
    status: 500;
    value: UnionApiErrorServerError;
};
export declare type GetCollectionsByOwnerResponse = GetCollectionsByOwner200 | GetCollectionsByOwner400 | GetCollectionsByOwner500;
export declare type RefreshCollectionMeta200 = {
    status: 200;
};
export declare type RefreshCollectionMeta400 = {
    status: 400;
    value: UnionApiErrorBadRequest;
};
export declare type RefreshCollectionMeta500 = {
    status: 500;
    value: UnionApiErrorServerError;
};
export declare type RefreshCollectionMetaResponse = RefreshCollectionMeta200 | RefreshCollectionMeta400 | RefreshCollectionMeta500;
