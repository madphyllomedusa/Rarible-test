/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { Blockchain, Order, OrderIds, OrderSort, OrderStatus, Orders, Platform, UnionApiErrorBadRequest, UnionApiErrorEntityNotFound, UnionApiErrorServerError } from '../models';
export interface GetOrderBidsByItemRequest {
    itemId: string;
    platform?: Platform;
    maker?: Array<string>;
    origin?: string;
    status?: Array<OrderStatus>;
    start?: number;
    end?: number;
    continuation?: string;
    size?: number;
}
export interface GetOrderBidsByMakerRequest {
    maker: string;
    blockchains?: Array<Blockchain>;
    platform?: Platform;
    origin?: string;
    status?: Array<OrderStatus>;
    start?: number;
    end?: number;
    continuation?: string;
    size?: number;
}
export interface GetOrderByIdRequest {
    id: string;
}
export interface GetOrdersAllRequest {
    blockchains?: Array<Blockchain>;
    continuation?: string;
    size?: number;
    sort?: OrderSort;
    status?: Array<OrderStatus>;
}
export interface GetOrdersByIdsRequest {
    orderIds: OrderIds;
}
export interface GetSellOrdersRequest {
    blockchains?: Array<Blockchain>;
    platform?: Platform;
    origin?: string;
    continuation?: string;
    size?: number;
}
export interface GetSellOrdersByItemRequest {
    itemId: string;
    platform?: Platform;
    maker?: string;
    origin?: string;
    status?: Array<OrderStatus>;
    continuation?: string;
    size?: number;
}
export interface GetSellOrdersByMakerRequest {
    maker: string;
    blockchains?: Array<Blockchain>;
    platform?: Platform;
    origin?: string;
    continuation?: string;
    size?: number;
    status?: Array<OrderStatus>;
}
/**
 * no description
 */
export declare class OrderControllerApi extends runtime.BaseAPI {
    /**
     * Returns order bids by item
     */
    getOrderBidsByItemRaw(requestParameters: GetOrderBidsByItemRequest): Promise<GetOrderBidsByItemResponse>;
    /**
     * Returns order bids by item
     */
    getOrderBidsByItem(requestParameters: GetOrderBidsByItemRequest): Promise<Orders>;
    /**
     * Returns order bids by maker
     */
    getOrderBidsByMakerRaw(requestParameters: GetOrderBidsByMakerRequest): Promise<GetOrderBidsByMakerResponse>;
    /**
     * Returns order bids by maker
     */
    getOrderBidsByMaker(requestParameters: GetOrderBidsByMakerRequest): Promise<Orders>;
    /**
     * Returns order by Id
     */
    getOrderByIdRaw(requestParameters: GetOrderByIdRequest): Promise<GetOrderByIdResponse>;
    /**
     * Returns order by Id
     */
    getOrderById(requestParameters: GetOrderByIdRequest): Promise<Order>;
    /**
     * Returns all orders
     */
    getOrdersAllRaw(requestParameters: GetOrdersAllRequest): Promise<GetOrdersAllResponse>;
    /**
     * Returns all orders
     */
    getOrdersAll(requestParameters: GetOrdersAllRequest): Promise<Orders>;
    /**
     * Returns the orders that have been put on sale
     */
    getOrdersByIdsRaw(requestParameters: GetOrdersByIdsRequest): Promise<GetOrdersByIdsResponse>;
    /**
     * Returns the orders that have been put on sale
     */
    getOrdersByIds(requestParameters: GetOrdersByIdsRequest): Promise<Orders>;
    /**
     * Returns all sell orders
     */
    getSellOrdersRaw(requestParameters: GetSellOrdersRequest): Promise<GetSellOrdersResponse>;
    /**
     * Returns all sell orders
     */
    getSellOrders(requestParameters: GetSellOrdersRequest): Promise<Orders>;
    /**
     * Returns sell orders by item
     */
    getSellOrdersByItemRaw(requestParameters: GetSellOrdersByItemRequest): Promise<GetSellOrdersByItemResponse>;
    /**
     * Returns sell orders by item
     */
    getSellOrdersByItem(requestParameters: GetSellOrdersByItemRequest): Promise<Orders>;
    /**
     * Returns sell orders by maker
     */
    getSellOrdersByMakerRaw(requestParameters: GetSellOrdersByMakerRequest): Promise<GetSellOrdersByMakerResponse>;
    /**
     * Returns sell orders by maker
     */
    getSellOrdersByMaker(requestParameters: GetSellOrdersByMakerRequest): Promise<Orders>;
}
export declare type GetOrderBidsByItem200 = {
    status: 200;
    value: Orders;
};
export declare type GetOrderBidsByItem400 = {
    status: 400;
    value: UnionApiErrorBadRequest;
};
export declare type GetOrderBidsByItem500 = {
    status: 500;
    value: UnionApiErrorServerError;
};
export declare type GetOrderBidsByItemResponse = GetOrderBidsByItem200 | GetOrderBidsByItem400 | GetOrderBidsByItem500;
export declare type GetOrderBidsByMaker200 = {
    status: 200;
    value: Orders;
};
export declare type GetOrderBidsByMaker400 = {
    status: 400;
    value: UnionApiErrorBadRequest;
};
export declare type GetOrderBidsByMaker500 = {
    status: 500;
    value: UnionApiErrorServerError;
};
export declare type GetOrderBidsByMakerResponse = GetOrderBidsByMaker200 | GetOrderBidsByMaker400 | GetOrderBidsByMaker500;
export declare type GetOrderById200 = {
    status: 200;
    value: Order;
};
export declare type GetOrderById404 = {
    status: 404;
    value: UnionApiErrorEntityNotFound;
};
export declare type GetOrderById400 = {
    status: 400;
    value: UnionApiErrorBadRequest;
};
export declare type GetOrderById500 = {
    status: 500;
    value: UnionApiErrorServerError;
};
export declare type GetOrderByIdResponse = GetOrderById200 | GetOrderById404 | GetOrderById400 | GetOrderById500;
export declare type GetOrdersAll200 = {
    status: 200;
    value: Orders;
};
export declare type GetOrdersAll400 = {
    status: 400;
    value: UnionApiErrorBadRequest;
};
export declare type GetOrdersAll500 = {
    status: 500;
    value: UnionApiErrorServerError;
};
export declare type GetOrdersAllResponse = GetOrdersAll200 | GetOrdersAll400 | GetOrdersAll500;
export declare type GetOrdersByIds200 = {
    status: 200;
    value: Orders;
};
export declare type GetOrdersByIds400 = {
    status: 400;
    value: UnionApiErrorBadRequest;
};
export declare type GetOrdersByIds500 = {
    status: 500;
    value: UnionApiErrorServerError;
};
export declare type GetOrdersByIdsResponse = GetOrdersByIds200 | GetOrdersByIds400 | GetOrdersByIds500;
export declare type GetSellOrders200 = {
    status: 200;
    value: Orders;
};
export declare type GetSellOrders400 = {
    status: 400;
    value: UnionApiErrorBadRequest;
};
export declare type GetSellOrders500 = {
    status: 500;
    value: UnionApiErrorServerError;
};
export declare type GetSellOrdersResponse = GetSellOrders200 | GetSellOrders400 | GetSellOrders500;
export declare type GetSellOrdersByItem200 = {
    status: 200;
    value: Orders;
};
export declare type GetSellOrdersByItem400 = {
    status: 400;
    value: UnionApiErrorBadRequest;
};
export declare type GetSellOrdersByItem500 = {
    status: 500;
    value: UnionApiErrorServerError;
};
export declare type GetSellOrdersByItemResponse = GetSellOrdersByItem200 | GetSellOrdersByItem400 | GetSellOrdersByItem500;
export declare type GetSellOrdersByMaker200 = {
    status: 200;
    value: Orders;
};
export declare type GetSellOrdersByMaker400 = {
    status: 400;
    value: UnionApiErrorBadRequest;
};
export declare type GetSellOrdersByMaker500 = {
    status: 500;
    value: UnionApiErrorServerError;
};
export declare type GetSellOrdersByMakerResponse = GetSellOrdersByMaker200 | GetSellOrdersByMaker400 | GetSellOrdersByMaker500;
