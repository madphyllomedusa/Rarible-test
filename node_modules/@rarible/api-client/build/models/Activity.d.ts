import { ActivityBlockchainInfo } from "./ActivityBlockchainInfo";
import { ActivityId } from "@rarible/types";
import { Asset } from "./Asset";
import { AssetType } from "./AssetType";
import { Auction } from "./Auction";
import { AuctionBid } from "./AuctionBid";
import { BigNumber } from "@rarible/types";
import { ContractAddress } from "@rarible/types";
import { ItemId } from "@rarible/types";
import { OrderActivityMatchSide } from "./OrderActivityMatchSide";
import { OrderActivitySource } from "./OrderActivitySource";
import { UnionAddress } from "@rarible/types";
export declare type Activity = MintActivity | BurnActivity | TransferActivity | OrderMatchActivity | OrderBidActivity | OrderListActivity | OrderCancelBidActivity | OrderCancelListActivity | AuctionOpenActivity | AuctionBidActivity | AuctionFinishActivity | AuctionCancelActivity | AuctionStartActivity | AuctionEndActivity;
export declare type MintActivity = {
    "@type": "MINT";
    id: ActivityId;
    date: string;
    reverted?: boolean;
    owner: UnionAddress;
    contract?: ContractAddress;
    tokenId?: BigNumber;
    itemId?: ItemId;
    value: BigNumber;
    transactionHash: string;
    blockchainInfo?: ActivityBlockchainInfo;
};
export declare type BurnActivity = {
    "@type": "BURN";
    id: ActivityId;
    date: string;
    reverted?: boolean;
    owner: UnionAddress;
    contract?: ContractAddress;
    tokenId?: BigNumber;
    itemId?: ItemId;
    value: BigNumber;
    transactionHash: string;
    blockchainInfo?: ActivityBlockchainInfo;
};
export declare type TransferActivity = {
    "@type": "TRANSFER";
    id: ActivityId;
    date: string;
    reverted?: boolean;
    from: UnionAddress;
    owner: UnionAddress;
    contract?: ContractAddress;
    tokenId?: BigNumber;
    itemId?: ItemId;
    value: BigNumber;
    purchase?: boolean;
    transactionHash: string;
    blockchainInfo?: ActivityBlockchainInfo;
};
export declare type OrderMatchActivity = OrderMatchSwap | OrderMatchSell;
export declare type OrderMatchSwap = {
    "@type": "SWAP";
    source: OrderActivitySource;
    transactionHash: string;
    blockchainInfo?: ActivityBlockchainInfo;
    id: ActivityId;
    date: string;
    reverted?: boolean;
    left: OrderActivityMatchSide;
    right: OrderActivityMatchSide;
};
export declare enum OrderMatchSellType {
    SELL = "SELL",
    ACCEPT_BID = "ACCEPT_BID"
}
export declare type OrderMatchSell = {
    "@type": "SELL";
    source: OrderActivitySource;
    transactionHash: string;
    blockchainInfo?: ActivityBlockchainInfo;
    id: ActivityId;
    date: string;
    reverted?: boolean;
    nft: Asset;
    payment: Asset;
    buyer: UnionAddress;
    seller: UnionAddress;
    buyerOrderHash?: string;
    sellerOrderHash?: string;
    price: BigNumber;
    priceUsd?: BigNumber;
    amountUsd?: BigNumber;
    type: OrderMatchSellType;
};
export declare type OrderBidActivity = {
    "@type": "BID";
    id: ActivityId;
    date: string;
    reverted?: boolean;
    hash: string;
    maker: UnionAddress;
    make: Asset;
    take: Asset;
    price: BigNumber;
    priceUsd?: BigNumber;
    source?: OrderActivitySource;
};
export declare type OrderListActivity = {
    "@type": "LIST";
    id: ActivityId;
    date: string;
    reverted?: boolean;
    hash: string;
    maker: UnionAddress;
    make: Asset;
    take: Asset;
    price: BigNumber;
    priceUsd?: BigNumber;
    source?: OrderActivitySource;
};
export declare type OrderCancelBidActivity = {
    "@type": "CANCEL_BID";
    id: ActivityId;
    date: string;
    reverted?: boolean;
    hash: string;
    maker: UnionAddress;
    make: AssetType;
    take: AssetType;
    source?: OrderActivitySource;
    transactionHash: string;
    blockchainInfo?: ActivityBlockchainInfo;
};
export declare type OrderCancelListActivity = {
    "@type": "CANCEL_LIST";
    id: ActivityId;
    date: string;
    reverted?: boolean;
    hash: string;
    maker: UnionAddress;
    make: AssetType;
    take: AssetType;
    source?: OrderActivitySource;
    transactionHash: string;
    blockchainInfo?: ActivityBlockchainInfo;
};
export declare type AuctionOpenActivity = {
    "@type": "auction_open";
    id: ActivityId;
    date: string;
    reverted?: boolean;
    auction: Auction;
    transactionHash: string;
};
export declare type AuctionBidActivity = {
    "@type": "auction_bid";
    id: ActivityId;
    date: string;
    reverted?: boolean;
    auction: Auction;
    bid: AuctionBid;
    transactionHash: string;
};
export declare type AuctionFinishActivity = {
    "@type": "auction_finish";
    id: ActivityId;
    date: string;
    reverted?: boolean;
    auction: Auction;
    transactionHash: string;
};
export declare type AuctionCancelActivity = {
    "@type": "auction_cancel";
    id: ActivityId;
    date: string;
    reverted?: boolean;
    auction: Auction;
    transactionHash: string;
};
export declare type AuctionStartActivity = {
    "@type": "auction_start";
    id: ActivityId;
    date: string;
    reverted?: boolean;
    auction: Auction;
};
export declare type AuctionEndActivity = {
    "@type": "auction_end";
    id: ActivityId;
    date: string;
    reverted?: boolean;
    auction: Auction;
};
