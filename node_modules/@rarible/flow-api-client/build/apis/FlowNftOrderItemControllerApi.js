"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FlowNftOrderItemControllerApi = void 0;
var tslib_1 = require("tslib");
var runtime = (0, tslib_1.__importStar)(require("../runtime"));
/**
 * no description
 */
var FlowNftOrderItemControllerApi = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(FlowNftOrderItemControllerApi, _super);
    function FlowNftOrderItemControllerApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     */
    FlowNftOrderItemControllerApi.prototype.getNftOrderAllItemsRaw = function (requestParameters) {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            var _a, _b, _c;
            return (0, tslib_1.__generator)(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        queryParameters = {};
                        if (requestParameters.continuation !== undefined) {
                            queryParameters['continuation'] = requestParameters.continuation;
                        }
                        if (requestParameters.size !== undefined) {
                            queryParameters['size'] = requestParameters.size;
                        }
                        if (requestParameters.showDeleted !== undefined) {
                            queryParameters['showDeleted'] = requestParameters.showDeleted;
                        }
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/v0.1/order/items/all",
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            })];
                    case 1:
                        response = _d.sent();
                        if (!(response.status === 200)) return [3 /*break*/, 3];
                        _a = {
                            status: 200
                        };
                        return [4 /*yield*/, response.json()];
                    case 2: return [2 /*return*/, (_a.value = _d.sent(),
                            _a)];
                    case 3:
                        if (!(response.status === 400)) return [3 /*break*/, 5];
                        _b = {
                            status: 400
                        };
                        return [4 /*yield*/, response.json()];
                    case 4: return [2 /*return*/, (_b.value = _d.sent(),
                            _b)];
                    case 5:
                        if (!(response.status === 500)) return [3 /*break*/, 7];
                        _c = {
                            status: 500
                        };
                        return [4 /*yield*/, response.json()];
                    case 6: return [2 /*return*/, (_c.value = _d.sent(),
                            _c)];
                    case 7: throw response;
                }
            });
        });
    };
    /**
     */
    FlowNftOrderItemControllerApi.prototype.getNftOrderAllItems = function (requestParameters) {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var response;
            return (0, tslib_1.__generator)(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getNftOrderAllItemsRaw(requestParameters)];
                    case 1:
                        response = _a.sent();
                        if (response.status === 200) {
                            return [2 /*return*/, response.value];
                        }
                        throw response;
                }
            });
        });
    };
    /**
     */
    FlowNftOrderItemControllerApi.prototype.getNftOrderItemsByCollectionRaw = function (requestParameters) {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            var _a, _b, _c;
            return (0, tslib_1.__generator)(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        if (requestParameters.collection === null || requestParameters.collection === undefined) {
                            throw new runtime.RequiredError('collection', 'Required parameter requestParameters.collection was null or undefined when calling getNftOrderItemsByCollection.');
                        }
                        queryParameters = {};
                        if (requestParameters.collection !== undefined) {
                            queryParameters['collection'] = requestParameters.collection;
                        }
                        if (requestParameters.continuation !== undefined) {
                            queryParameters['continuation'] = requestParameters.continuation;
                        }
                        if (requestParameters.size !== undefined) {
                            queryParameters['size'] = requestParameters.size;
                        }
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/v0.1/order/items/byCollection",
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            })];
                    case 1:
                        response = _d.sent();
                        if (!(response.status === 200)) return [3 /*break*/, 3];
                        _a = {
                            status: 200
                        };
                        return [4 /*yield*/, response.json()];
                    case 2: return [2 /*return*/, (_a.value = _d.sent(),
                            _a)];
                    case 3:
                        if (!(response.status === 400)) return [3 /*break*/, 5];
                        _b = {
                            status: 400
                        };
                        return [4 /*yield*/, response.json()];
                    case 4: return [2 /*return*/, (_b.value = _d.sent(),
                            _b)];
                    case 5:
                        if (!(response.status === 500)) return [3 /*break*/, 7];
                        _c = {
                            status: 500
                        };
                        return [4 /*yield*/, response.json()];
                    case 6: return [2 /*return*/, (_c.value = _d.sent(),
                            _c)];
                    case 7: throw response;
                }
            });
        });
    };
    /**
     */
    FlowNftOrderItemControllerApi.prototype.getNftOrderItemsByCollection = function (requestParameters) {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var response;
            return (0, tslib_1.__generator)(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getNftOrderItemsByCollectionRaw(requestParameters)];
                    case 1:
                        response = _a.sent();
                        if (response.status === 200) {
                            return [2 /*return*/, response.value];
                        }
                        throw response;
                }
            });
        });
    };
    /**
     */
    FlowNftOrderItemControllerApi.prototype.getNftOrderItemsByOwnerRaw = function (requestParameters) {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            var _a, _b, _c;
            return (0, tslib_1.__generator)(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        if (requestParameters.owner === null || requestParameters.owner === undefined) {
                            throw new runtime.RequiredError('owner', 'Required parameter requestParameters.owner was null or undefined when calling getNftOrderItemsByOwner.');
                        }
                        queryParameters = {};
                        if (requestParameters.owner !== undefined) {
                            queryParameters['owner'] = requestParameters.owner;
                        }
                        if (requestParameters.continuation !== undefined) {
                            queryParameters['continuation'] = requestParameters.continuation;
                        }
                        if (requestParameters.size !== undefined) {
                            queryParameters['size'] = requestParameters.size;
                        }
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/v0.1/order/items/byOwner",
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            })];
                    case 1:
                        response = _d.sent();
                        if (!(response.status === 200)) return [3 /*break*/, 3];
                        _a = {
                            status: 200
                        };
                        return [4 /*yield*/, response.json()];
                    case 2: return [2 /*return*/, (_a.value = _d.sent(),
                            _a)];
                    case 3:
                        if (!(response.status === 400)) return [3 /*break*/, 5];
                        _b = {
                            status: 400
                        };
                        return [4 /*yield*/, response.json()];
                    case 4: return [2 /*return*/, (_b.value = _d.sent(),
                            _b)];
                    case 5:
                        if (!(response.status === 500)) return [3 /*break*/, 7];
                        _c = {
                            status: 500
                        };
                        return [4 /*yield*/, response.json()];
                    case 6: return [2 /*return*/, (_c.value = _d.sent(),
                            _c)];
                    case 7: throw response;
                }
            });
        });
    };
    /**
     */
    FlowNftOrderItemControllerApi.prototype.getNftOrderItemsByOwner = function (requestParameters) {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var response;
            return (0, tslib_1.__generator)(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getNftOrderItemsByOwnerRaw(requestParameters)];
                    case 1:
                        response = _a.sent();
                        if (response.status === 200) {
                            return [2 /*return*/, response.value];
                        }
                        throw response;
                }
            });
        });
    };
    return FlowNftOrderItemControllerApi;
}(runtime.BaseAPI));
exports.FlowNftOrderItemControllerApi = FlowNftOrderItemControllerApi;
