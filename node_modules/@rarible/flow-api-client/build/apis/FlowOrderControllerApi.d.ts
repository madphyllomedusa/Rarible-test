/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { FlowApiError, FlowAsset, FlowOrder, FlowOrderIds, FlowOrderStatusEnum, FlowOrdersPagination } from '../models';
export interface GetBidCurrenciesRequest {
    itemId: string;
}
export interface GetBidsByItemRequest {
    contract: string;
    tokenId: string;
    status: Array<FlowOrderStatusEnum>;
    maker?: string;
    origin?: string;
    startDate?: Date;
    endDate?: Date;
    currencyAddress?: string;
    continuation?: string;
    size?: number;
}
export interface GetOrderBidsByItemRequest {
    contract: string;
    tokenId: string;
    maker?: string;
    origin?: string;
    currencyAddress?: string;
    continuation?: string;
    size?: number;
}
export interface GetOrderBidsByMakerRequest {
    maker: string;
    status: Array<FlowOrderStatusEnum>;
    origin?: string;
    startDate?: Date;
    endDate?: Date;
    continuation?: string;
    size?: number;
}
export interface GetOrderByOrderIdRequest {
    orderId: string;
}
export interface GetOrdersAllRequest {
    origin?: string;
    continuation?: string;
    size?: number;
}
export interface GetOrdersAllByStatusRequest {
    sort?: string;
    continuation?: string;
    size?: number;
    status?: Array<FlowOrderStatusEnum>;
}
export interface GetOrdersByIdsRequest {
    flowOrderIds: FlowOrderIds;
}
export interface GetSellCurrenciesRequest {
    itemId: string;
}
export interface GetSellOrdersRequest {
    origin?: string;
    continuation?: string;
    size?: number;
}
export interface GetSellOrdersByCollectionRequest {
    collection: string;
    origin?: string;
    continuation?: string;
    size?: number;
}
export interface GetSellOrdersByItemRequest {
    contract: string;
    tokenId: string;
    maker?: string;
    origin?: string;
    continuation?: string;
    size?: number;
}
export interface GetSellOrdersByItemAndByStatusRequest {
    contract: string;
    tokenId: string;
    maker?: string;
    origin?: string;
    continuation?: string;
    size?: number;
    status?: Array<FlowOrderStatusEnum>;
    currencyAddress?: string;
}
export interface GetSellOrdersByMakerRequest {
    maker: string;
    origin?: string;
    continuation?: string;
    size?: number;
}
/**
 * no description
 */
export declare class FlowOrderControllerApi extends runtime.BaseAPI {
    /**
     */
    getBidCurrenciesRaw(requestParameters: GetBidCurrenciesRequest): Promise<GetBidCurrenciesResponse>;
    /**
     */
    getBidCurrencies(requestParameters: GetBidCurrenciesRequest): Promise<Array<FlowAsset>>;
    /**
     */
    getBidsByItemRaw(requestParameters: GetBidsByItemRequest): Promise<GetBidsByItemResponse>;
    /**
     */
    getBidsByItem(requestParameters: GetBidsByItemRequest): Promise<FlowOrdersPagination>;
    /**
     */
    getOrderBidsByItemRaw(requestParameters: GetOrderBidsByItemRequest): Promise<GetOrderBidsByItemResponse>;
    /**
     */
    getOrderBidsByItem(requestParameters: GetOrderBidsByItemRequest): Promise<FlowOrdersPagination>;
    /**
     */
    getOrderBidsByMakerRaw(requestParameters: GetOrderBidsByMakerRequest): Promise<GetOrderBidsByMakerResponse>;
    /**
     */
    getOrderBidsByMaker(requestParameters: GetOrderBidsByMakerRequest): Promise<FlowOrdersPagination>;
    /**
     */
    getOrderByOrderIdRaw(requestParameters: GetOrderByOrderIdRequest): Promise<GetOrderByOrderIdResponse>;
    /**
     */
    getOrderByOrderId(requestParameters: GetOrderByOrderIdRequest): Promise<FlowOrder>;
    /**
     * Returns all orders by specified parameters
     */
    getOrdersAllRaw(requestParameters: GetOrdersAllRequest): Promise<GetOrdersAllResponse>;
    /**
     * Returns all orders by specified parameters
     */
    getOrdersAll(requestParameters: GetOrdersAllRequest): Promise<FlowOrdersPagination>;
    /**
     */
    getOrdersAllByStatusRaw(requestParameters: GetOrdersAllByStatusRequest): Promise<GetOrdersAllByStatusResponse>;
    /**
     */
    getOrdersAllByStatus(requestParameters: GetOrdersAllByStatusRequest): Promise<FlowOrdersPagination>;
    /**
     * Returns all orders by order hash
     */
    getOrdersByIdsRaw(requestParameters: GetOrdersByIdsRequest): Promise<GetOrdersByIdsResponse>;
    /**
     * Returns all orders by order hash
     */
    getOrdersByIds(requestParameters: GetOrdersByIdsRequest): Promise<Array<FlowOrder>>;
    /**
     */
    getSellCurrenciesRaw(requestParameters: GetSellCurrenciesRequest): Promise<GetSellCurrenciesResponse>;
    /**
     */
    getSellCurrencies(requestParameters: GetSellCurrenciesRequest): Promise<Array<FlowAsset>>;
    /**
     */
    getSellOrdersRaw(requestParameters: GetSellOrdersRequest): Promise<GetSellOrdersResponse>;
    /**
     */
    getSellOrders(requestParameters: GetSellOrdersRequest): Promise<FlowOrdersPagination>;
    /**
     */
    getSellOrdersByCollectionRaw(requestParameters: GetSellOrdersByCollectionRequest): Promise<GetSellOrdersByCollectionResponse>;
    /**
     */
    getSellOrdersByCollection(requestParameters: GetSellOrdersByCollectionRequest): Promise<FlowOrdersPagination>;
    /**
     */
    getSellOrdersByItemRaw(requestParameters: GetSellOrdersByItemRequest): Promise<GetSellOrdersByItemResponse>;
    /**
     */
    getSellOrdersByItem(requestParameters: GetSellOrdersByItemRequest): Promise<FlowOrdersPagination>;
    /**
     */
    getSellOrdersByItemAndByStatusRaw(requestParameters: GetSellOrdersByItemAndByStatusRequest): Promise<GetSellOrdersByItemAndByStatusResponse>;
    /**
     */
    getSellOrdersByItemAndByStatus(requestParameters: GetSellOrdersByItemAndByStatusRequest): Promise<FlowOrdersPagination>;
    /**
     */
    getSellOrdersByMakerRaw(requestParameters: GetSellOrdersByMakerRequest): Promise<GetSellOrdersByMakerResponse>;
    /**
     */
    getSellOrdersByMaker(requestParameters: GetSellOrdersByMakerRequest): Promise<FlowOrdersPagination>;
}
export declare type GetBidCurrencies200 = {
    status: 200;
    value: Array<FlowAsset>;
};
export declare type GetBidCurrencies400 = {
    status: 400;
    value: FlowApiError;
};
export declare type GetBidCurrencies500 = {
    status: 500;
    value: FlowApiError;
};
export declare type GetBidCurrenciesResponse = GetBidCurrencies200 | GetBidCurrencies400 | GetBidCurrencies500;
export declare type GetBidsByItem200 = {
    status: 200;
    value: FlowOrdersPagination;
};
export declare type GetBidsByItem400 = {
    status: 400;
    value: FlowApiError;
};
export declare type GetBidsByItem500 = {
    status: 500;
    value: FlowApiError;
};
export declare type GetBidsByItemResponse = GetBidsByItem200 | GetBidsByItem400 | GetBidsByItem500;
export declare type GetOrderBidsByItem200 = {
    status: 200;
    value: FlowOrdersPagination;
};
export declare type GetOrderBidsByItem400 = {
    status: 400;
    value: FlowApiError;
};
export declare type GetOrderBidsByItem500 = {
    status: 500;
    value: FlowApiError;
};
export declare type GetOrderBidsByItemResponse = GetOrderBidsByItem200 | GetOrderBidsByItem400 | GetOrderBidsByItem500;
export declare type GetOrderBidsByMaker200 = {
    status: 200;
    value: FlowOrdersPagination;
};
export declare type GetOrderBidsByMaker400 = {
    status: 400;
    value: FlowApiError;
};
export declare type GetOrderBidsByMaker500 = {
    status: 500;
    value: FlowApiError;
};
export declare type GetOrderBidsByMakerResponse = GetOrderBidsByMaker200 | GetOrderBidsByMaker400 | GetOrderBidsByMaker500;
export declare type GetOrderByOrderId200 = {
    status: 200;
    value: FlowOrder;
};
export declare type GetOrderByOrderId500 = {
    status: 500;
    value: FlowApiError;
};
export declare type GetOrderByOrderIdResponse = GetOrderByOrderId200 | GetOrderByOrderId500;
export declare type GetOrdersAll200 = {
    status: 200;
    value: FlowOrdersPagination;
};
export declare type GetOrdersAll400 = {
    status: 400;
    value: FlowApiError;
};
export declare type GetOrdersAll500 = {
    status: 500;
    value: FlowApiError;
};
export declare type GetOrdersAllResponse = GetOrdersAll200 | GetOrdersAll400 | GetOrdersAll500;
export declare type GetOrdersAllByStatus200 = {
    status: 200;
    value: FlowOrdersPagination;
};
export declare type GetOrdersAllByStatus400 = {
    status: 400;
    value: FlowApiError;
};
export declare type GetOrdersAllByStatus500 = {
    status: 500;
    value: FlowApiError;
};
export declare type GetOrdersAllByStatusResponse = GetOrdersAllByStatus200 | GetOrdersAllByStatus400 | GetOrdersAllByStatus500;
export declare type GetOrdersByIds200 = {
    status: 200;
    value: Array<FlowOrder>;
};
export declare type GetOrdersByIds400 = {
    status: 400;
    value: FlowApiError;
};
export declare type GetOrdersByIds500 = {
    status: 500;
    value: FlowApiError;
};
export declare type GetOrdersByIdsResponse = GetOrdersByIds200 | GetOrdersByIds400 | GetOrdersByIds500;
export declare type GetSellCurrencies200 = {
    status: 200;
    value: Array<FlowAsset>;
};
export declare type GetSellCurrencies400 = {
    status: 400;
    value: FlowApiError;
};
export declare type GetSellCurrencies500 = {
    status: 500;
    value: FlowApiError;
};
export declare type GetSellCurrenciesResponse = GetSellCurrencies200 | GetSellCurrencies400 | GetSellCurrencies500;
export declare type GetSellOrders200 = {
    status: 200;
    value: FlowOrdersPagination;
};
export declare type GetSellOrders400 = {
    status: 400;
    value: FlowApiError;
};
export declare type GetSellOrders500 = {
    status: 500;
    value: FlowApiError;
};
export declare type GetSellOrdersResponse = GetSellOrders200 | GetSellOrders400 | GetSellOrders500;
export declare type GetSellOrdersByCollection200 = {
    status: 200;
    value: FlowOrdersPagination;
};
export declare type GetSellOrdersByCollection400 = {
    status: 400;
    value: FlowApiError;
};
export declare type GetSellOrdersByCollection500 = {
    status: 500;
    value: FlowApiError;
};
export declare type GetSellOrdersByCollectionResponse = GetSellOrdersByCollection200 | GetSellOrdersByCollection400 | GetSellOrdersByCollection500;
export declare type GetSellOrdersByItem200 = {
    status: 200;
    value: FlowOrdersPagination;
};
export declare type GetSellOrdersByItem400 = {
    status: 400;
    value: FlowApiError;
};
export declare type GetSellOrdersByItem500 = {
    status: 500;
    value: FlowApiError;
};
export declare type GetSellOrdersByItemResponse = GetSellOrdersByItem200 | GetSellOrdersByItem400 | GetSellOrdersByItem500;
export declare type GetSellOrdersByItemAndByStatus200 = {
    status: 200;
    value: FlowOrdersPagination;
};
export declare type GetSellOrdersByItemAndByStatus400 = {
    status: 400;
    value: FlowApiError;
};
export declare type GetSellOrdersByItemAndByStatus500 = {
    status: 500;
    value: FlowApiError;
};
export declare type GetSellOrdersByItemAndByStatusResponse = GetSellOrdersByItemAndByStatus200 | GetSellOrdersByItemAndByStatus400 | GetSellOrdersByItemAndByStatus500;
export declare type GetSellOrdersByMaker200 = {
    status: 200;
    value: FlowOrdersPagination;
};
export declare type GetSellOrdersByMaker400 = {
    status: 400;
    value: FlowApiError;
};
export declare type GetSellOrdersByMaker500 = {
    status: 500;
    value: FlowApiError;
};
export declare type GetSellOrdersByMakerResponse = GetSellOrdersByMaker200 | GetSellOrdersByMaker400 | GetSellOrdersByMaker500;
