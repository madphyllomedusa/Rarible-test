"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.upsert_order = void 0;
var tezos_common_1 = require("@rarible/tezos-common");
var utils_1 = require("./utils");
var get_make_fee_1 = require("./get-make-fee");
var add_fee_1 = require("./add-fee");
var approve_1 = require("./approve");
var sign_order_1 = require("./sign-order");
var node_fetch_1 = require("node-fetch");
function upsert_order(provider, order, use_all, infinite) {
    if (use_all === void 0) { use_all = false; }
    if (infinite === void 0) { infinite = false; }
    return __awaiter(this, void 0, void 0, function () {
        var make_fee, make, args, approve_a, op, order2, signature, r, _a, _b, _c;
        return __generator(this, function (_d) {
            switch (_d.label) {
                case 0:
                    make_fee = (0, get_make_fee_1.get_make_fee)(provider.config.fees, order);
                    return [4 /*yield*/, (0, add_fee_1.add_fee)(provider, order.make, make_fee)];
                case 1:
                    make = _d.sent();
                    args = [];
                    return [4 /*yield*/, (0, approve_1.approve_arg)(provider, order.maker, make, use_all, infinite)];
                case 2:
                    approve_a = _d.sent();
                    if (approve_a)
                        args = args.concat(approve_a);
                    if (!(args.length != 0)) return [3 /*break*/, 5];
                    return [4 /*yield*/, (0, tezos_common_1.send_batch)(provider, args)];
                case 3:
                    op = _d.sent();
                    return [4 /*yield*/, op.confirmation()];
                case 4:
                    _d.sent();
                    _d.label = 5;
                case 5:
                    order2 = __assign(__assign({}, order), { make: { asset_type: make.asset_type, value: order.make.value } });
                    return [4 /*yield*/, (0, sign_order_1.sign_order)(provider, order2)];
                case 6:
                    signature = _d.sent();
                    return [4 /*yield*/, (0, node_fetch_1.default)(provider.config.api + '/orders', {
                            method: 'POST', headers: [['content-type', 'application/json']],
                            body: JSON.stringify((0, utils_1.order_to_json)(__assign(__assign({}, order2), { signature: signature })))
                        })];
                case 7:
                    r = _d.sent();
                    if (!r.ok) return [3 /*break*/, 8];
                    return [2 /*return*/, r.json()];
                case 8:
                    _b = (_a = console).error;
                    _c = [r.statusText];
                    return [4 /*yield*/, r.json()];
                case 9:
                    _b.apply(_a, _c.concat([_d.sent()]));
                    throw new Error("/orders failed");
            }
        });
    });
}
exports.upsert_order = upsert_order;
