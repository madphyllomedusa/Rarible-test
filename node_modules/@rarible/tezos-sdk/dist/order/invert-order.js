"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.invert_order = void 0;
var tezos_common_1 = require("@rarible/tezos-common");
var is_nft_1 = require("./is-nft");
var bignumber_js_1 = require("bignumber.js");
function calculate_amounts(make, take, amount, bid) {
    if (bid)
        return [amount, new bignumber_js_1.default(amount).multipliedBy(make).div(take)];
    else
        return [new bignumber_js_1.default(amount).multipliedBy(take).div(make), amount];
}
function invert_order(order, amount, maker_edpk, salt) {
    if (salt === void 0) { salt = '0'; }
    var _a = __read(calculate_amounts(order.make.value, order.take.value, amount, (0, is_nft_1.is_nft)(order.take.asset_type)), 2), makeValue = _a[0], takeValue = _a[1];
    return __assign(__assign({}, order), { make: __assign(__assign({}, order.take), { value: makeValue }), take: __assign(__assign({}, order.make), { value: takeValue }), maker: (0, tezos_common_1.pk_to_pkh)(maker_edpk), maker_edpk: maker_edpk, taker: order.maker, taker_edpk: order.maker_edpk, salt: salt, signature: undefined });
}
exports.invert_order = invert_order;
