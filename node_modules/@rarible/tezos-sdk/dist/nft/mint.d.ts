import { Provider, TransactionArg, OperationResult, MintResult } from "@rarible/tezos-common";
import BigNumber from "bignumber.js";
export declare function get_next_token_id(provider: Provider, contract: string): Promise<BigNumber>;
export declare function metadata_arg(contract: string, token_id: BigNumber, metadata: {
    [key: string]: string;
}): TransactionArg;
export declare function set_token_metadata(provider: Provider, contract: string, token_id: BigNumber, metadata: {
    [key: string]: string;
}): Promise<OperationResult>;
export declare function mint_nft_arg(provider: Provider, contract: string, royalties: {
    [key: string]: BigNumber;
}, token_id?: BigNumber, metadata?: {
    [key: string]: string;
}, owner?: string): Promise<[BigNumber, TransactionArg]>;
export declare function mint_nft(provider: Provider, contract: string, royalties: {
    [key: string]: BigNumber;
}, token_id?: BigNumber, metadata?: {
    [key: string]: string;
}, owner?: string): Promise<MintResult>;
export declare function mint_mt_arg(provider: Provider, contract: string, royalties: {
    [key: string]: BigNumber;
}, supply: BigNumber, token_id?: BigNumber, metadata?: {
    [key: string]: string;
}, owner?: string): Promise<[BigNumber, TransactionArg]>;
export declare function mint_mt(provider: Provider, contract: string, royalties: {
    [key: string]: BigNumber;
}, supply: BigNumber, token_id?: BigNumber, metadata?: {
    [key: string]: string;
}, owner?: string): Promise<MintResult>;
export declare function mint_arg(provider: Provider, contract: string, royalties: {
    [key: string]: BigNumber;
}, supply?: BigNumber, token_id?: BigNumber, metadata?: {
    [key: string]: string;
}, owner?: string): Promise<[BigNumber, TransactionArg]>;
export declare function mint(provider: Provider, contract: string, royalties: {
    [key: string]: BigNumber;
}, supply?: BigNumber, token_id?: BigNumber, metadata?: {
    [key: string]: string;
}, owner?: string): Promise<MintResult>;
