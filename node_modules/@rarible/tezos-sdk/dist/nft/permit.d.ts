import { Provider, OperationResult, TransactionArg } from "@rarible/tezos-common";
import BigNumber from "bignumber.js";
export interface TransferDestination {
    destination: string;
    token_id: BigNumber;
    amount?: BigNumber;
}
export interface Permit {
    hash: string;
    signature: string;
    pk: string;
    contract: string;
}
export declare function get_counter(provider: Provider, contract: string, mandator?: string): Promise<BigNumber>;
export declare function make_permit(provider: Provider, contract: string, transfers: TransferDestination[], counter?: number): Promise<{
    permit: Permit;
    transfer: TransactionArg;
}>;
export declare function add_permit(provider: Provider, permit: Permit): Promise<OperationResult>;
export declare function set_expiry(provider: Provider, permit: Permit, expiry: Date, global?: boolean): Promise<OperationResult>;
