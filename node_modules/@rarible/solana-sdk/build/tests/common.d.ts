/// <reference types="node" />
/// <reference types="@metaplex-foundation/mpl-auction-house/node_modules/@solana/web3.js" />
import type { Connection, PublicKey } from "@solana/web3.js";
import { SolanaKeypairWallet } from "@rarible/solana-wallet";
import type { SolanaSdk } from "../sdk/sdk";
export declare const testWallets: {
    privateKeyString: string;
    privateKeyArray: Uint8Array;
    publicKeyString: string;
}[];
export declare function getTestWallet(walletIndex?: number): SolanaKeypairWallet;
export declare function genTestWallet(seed?: Uint8Array): SolanaKeypairWallet;
export declare function requestSol(connection: Connection, publicKey: PublicKey, sol?: number): Promise<number>;
export declare function checkTokenBalance(connection: Connection, owner: PublicKey, mint: PublicKey, expectedValue: number): Promise<Awaited<ReturnType<typeof connection.getTokenAccountsByOwner>>>;
export declare function mintToken({ sdk, wallet }: {
    sdk: SolanaSdk;
    wallet: SolanaKeypairWallet;
}): Promise<{
    mintTx: import("..").TransactionResult;
    mint: PublicKey;
    balance: import("@solana/web3.js").RpcResponseAndContext<{
        pubkey: PublicKey;
        account: import("@solana/web3.js").AccountInfo<Buffer>;
    }[]>;
}>;
