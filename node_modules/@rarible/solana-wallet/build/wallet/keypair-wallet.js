"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SolanaKeypairWallet = void 0;
var tslib_1 = require("tslib");
var web3 = tslib_1.__importStar(require("@solana/web3.js"));
var bs58_1 = tslib_1.__importDefault(require("bs58"));
var solana_common_1 = require("@rarible/solana-common");
/**
 * Abstraction over solana web3.Keypair
 */
var SolanaKeypairWallet = /** @class */ (function () {
    function SolanaKeypairWallet(keyPair) {
        this._keyPair = keyPair;
    }
    Object.defineProperty(SolanaKeypairWallet.prototype, "keyPair", {
        get: function () {
            return this._keyPair;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SolanaKeypairWallet.prototype, "publicKey", {
        get: function () {
            return this.keyPair.publicKey;
        },
        enumerable: false,
        configurable: true
    });
    SolanaKeypairWallet.prototype.signTransaction = function (tx) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                tx.partialSign(this.keyPair);
                return [2 /*return*/, tx];
            });
        });
    };
    SolanaKeypairWallet.prototype.signAllTransactions = function (txs) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, txs.map(function (t) {
                        t.partialSign(_this.keyPair);
                        return t;
                    })];
            });
        });
    };
    //eslint-disable-next-line @typescript-eslint/no-unused-vars
    SolanaKeypairWallet.prototype.signMessage = function (message, display) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                throw new Error("Unimplemented");
            });
        });
    };
    /**
     * Instantiate new SolanaWallet with provided keypair or from secret key
     * @param keyPair
     */
    SolanaKeypairWallet.createFrom = function (keyPair) {
        if ((0, solana_common_1.isPrivateKey)(keyPair)) {
            return new SolanaKeypairWallet(keyPair);
        }
        else if (ArrayBuffer.isView(keyPair)) {
            return new SolanaKeypairWallet(web3.Keypair.fromSecretKey(keyPair));
        }
        else if (typeof keyPair === "string") {
            return new SolanaKeypairWallet(web3.Keypair.fromSecretKey(Uint8Array.from(bs58_1.default.decode(keyPair))));
        }
        throw new Error("Unknown type of secret key");
    };
    /**
     * Instantiate new SolanaWallet with new generated keypair
     */
    SolanaKeypairWallet.generate = function (seed) {
        return SolanaKeypairWallet.createFrom(seed ? web3.Keypair.fromSeed(seed) : web3.Keypair.generate());
    };
    return SolanaKeypairWallet;
}());
exports.SolanaKeypairWallet = SolanaKeypairWallet;
