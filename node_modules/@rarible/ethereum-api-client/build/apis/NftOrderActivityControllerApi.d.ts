/**
 * OpenAPI definition
 * Indexers use OpenAPI to describe APIs (and events). Clients (Kotlin, TypeScript, etc.) and server controller interfaces automatically generated using YAML OpenAPI files.
 *
 * The version of the OpenAPI document: v0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { Activities, ActivityFilterAllType, ActivityFilterByCollectionType, ActivityFilterByItemType, ActivityFilterByUserType, ActivitySort, EthereumApiErrorBadRequest, EthereumApiErrorServerError } from '../models';
export interface GetNftOrderActivitiesByCollectionRequest {
    type: Array<ActivityFilterByCollectionType>;
    collection: string;
    continuation?: string;
    size?: number;
    sort?: ActivitySort;
}
export interface GetNftOrderActivitiesByItemRequest {
    type: Array<ActivityFilterByItemType>;
    contract: string;
    tokenId: string;
    continuation?: string;
    size?: number;
    sort?: ActivitySort;
}
export interface GetNftOrderActivitiesByUserRequest {
    type: Array<ActivityFilterByUserType>;
    user: Array<string>;
    from?: number;
    to?: number;
    continuation?: string;
    size?: number;
    sort?: ActivitySort;
}
export interface GetNftOrderAllActivitiesRequest {
    type: Array<ActivityFilterAllType>;
    continuation?: string;
    size?: number;
    sort?: ActivitySort;
}
/**
 * no description
 */
export declare class NftOrderActivityControllerApi extends runtime.BaseAPI {
    /**
     * Returns orders event history by collection
     */
    getNftOrderActivitiesByCollectionRaw(requestParameters: GetNftOrderActivitiesByCollectionRequest): Promise<GetNftOrderActivitiesByCollectionResponse>;
    /**
     * Returns orders event history by collection
     */
    getNftOrderActivitiesByCollection(requestParameters: GetNftOrderActivitiesByCollectionRequest): Promise<Activities>;
    /**
     * Returns orders event history by item
     */
    getNftOrderActivitiesByItemRaw(requestParameters: GetNftOrderActivitiesByItemRequest): Promise<GetNftOrderActivitiesByItemResponse>;
    /**
     * Returns orders event history by item
     */
    getNftOrderActivitiesByItem(requestParameters: GetNftOrderActivitiesByItemRequest): Promise<Activities>;
    /**
     * Returns orders event history by user
     */
    getNftOrderActivitiesByUserRaw(requestParameters: GetNftOrderActivitiesByUserRequest): Promise<GetNftOrderActivitiesByUserResponse>;
    /**
     * Returns orders event history by user
     */
    getNftOrderActivitiesByUser(requestParameters: GetNftOrderActivitiesByUserRequest): Promise<Activities>;
    /**
     * Returns all orders event history
     */
    getNftOrderAllActivitiesRaw(requestParameters: GetNftOrderAllActivitiesRequest): Promise<GetNftOrderAllActivitiesResponse>;
    /**
     * Returns all orders event history
     */
    getNftOrderAllActivities(requestParameters: GetNftOrderAllActivitiesRequest): Promise<Activities>;
}
export declare type GetNftOrderActivitiesByCollection200 = {
    status: 200;
    value: Activities;
};
export declare type GetNftOrderActivitiesByCollection400 = {
    status: 400;
    value: EthereumApiErrorBadRequest;
};
export declare type GetNftOrderActivitiesByCollection500 = {
    status: 500;
    value: EthereumApiErrorServerError;
};
export declare type GetNftOrderActivitiesByCollectionResponse = GetNftOrderActivitiesByCollection200 | GetNftOrderActivitiesByCollection400 | GetNftOrderActivitiesByCollection500;
export declare type GetNftOrderActivitiesByItem200 = {
    status: 200;
    value: Activities;
};
export declare type GetNftOrderActivitiesByItem400 = {
    status: 400;
    value: EthereumApiErrorBadRequest;
};
export declare type GetNftOrderActivitiesByItem500 = {
    status: 500;
    value: EthereumApiErrorServerError;
};
export declare type GetNftOrderActivitiesByItemResponse = GetNftOrderActivitiesByItem200 | GetNftOrderActivitiesByItem400 | GetNftOrderActivitiesByItem500;
export declare type GetNftOrderActivitiesByUser200 = {
    status: 200;
    value: Activities;
};
export declare type GetNftOrderActivitiesByUser400 = {
    status: 400;
    value: EthereumApiErrorBadRequest;
};
export declare type GetNftOrderActivitiesByUser500 = {
    status: 500;
    value: EthereumApiErrorServerError;
};
export declare type GetNftOrderActivitiesByUserResponse = GetNftOrderActivitiesByUser200 | GetNftOrderActivitiesByUser400 | GetNftOrderActivitiesByUser500;
export declare type GetNftOrderAllActivities200 = {
    status: 200;
    value: Activities;
};
export declare type GetNftOrderAllActivities400 = {
    status: 400;
    value: EthereumApiErrorBadRequest;
};
export declare type GetNftOrderAllActivities500 = {
    status: 500;
    value: EthereumApiErrorServerError;
};
export declare type GetNftOrderAllActivitiesResponse = GetNftOrderAllActivities200 | GetNftOrderAllActivities400 | GetNftOrderAllActivities500;
