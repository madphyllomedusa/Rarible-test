/**
 * OpenAPI definition
 * Indexers use OpenAPI to describe APIs (and events). Clients (Kotlin, TypeScript, etc.) and server controller interfaces automatically generated using YAML OpenAPI files.
 *
 * The version of the OpenAPI document: v0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { EthereumApiErrorBadRequest, EthereumApiErrorEntityNotFound, EthereumApiErrorServerError, NftCollection, NftCollections, NftTokenId } from '../models';
export interface GenerateNftOrderTokenIdRequest {
    collection: string;
    minter: string;
}
export interface GetNftOrderCollectionByIdRequest {
    collection: string;
}
export interface SearchNftOrderAllCollectionsRequest {
    continuation?: string;
    size?: number;
}
export interface SearchNftOrderCollectionsByOwnerRequest {
    owner: string;
    continuation?: string;
    size?: number;
}
/**
 * no description
 */
export declare class NftOrderCollectionControllerApi extends runtime.BaseAPI {
    /**
     * Returns next available tokenId for minter
     */
    generateNftOrderTokenIdRaw(requestParameters: GenerateNftOrderTokenIdRequest): Promise<GenerateNftOrderTokenIdResponse>;
    /**
     * Returns next available tokenId for minter
     */
    generateNftOrderTokenId(requestParameters: GenerateNftOrderTokenIdRequest): Promise<NftTokenId>;
    /**
     * Returns collection by address
     */
    getNftOrderCollectionByIdRaw(requestParameters: GetNftOrderCollectionByIdRequest): Promise<GetNftOrderCollectionByIdResponse>;
    /**
     * Returns collection by address
     */
    getNftOrderCollectionById(requestParameters: GetNftOrderCollectionByIdRequest): Promise<NftCollection>;
    /**
     * Returns all collections
     */
    searchNftOrderAllCollectionsRaw(requestParameters: SearchNftOrderAllCollectionsRequest): Promise<SearchNftOrderAllCollectionsResponse>;
    /**
     * Returns all collections
     */
    searchNftOrderAllCollections(requestParameters: SearchNftOrderAllCollectionsRequest): Promise<NftCollections>;
    /**
     * Returns all collections by owner
     */
    searchNftOrderCollectionsByOwnerRaw(requestParameters: SearchNftOrderCollectionsByOwnerRequest): Promise<SearchNftOrderCollectionsByOwnerResponse>;
    /**
     * Returns all collections by owner
     */
    searchNftOrderCollectionsByOwner(requestParameters: SearchNftOrderCollectionsByOwnerRequest): Promise<NftCollections>;
}
export declare type GenerateNftOrderTokenId200 = {
    status: 200;
    value: NftTokenId;
};
export declare type GenerateNftOrderTokenId400 = {
    status: 400;
    value: EthereumApiErrorBadRequest;
};
export declare type GenerateNftOrderTokenId500 = {
    status: 500;
    value: EthereumApiErrorServerError;
};
export declare type GenerateNftOrderTokenIdResponse = GenerateNftOrderTokenId200 | GenerateNftOrderTokenId400 | GenerateNftOrderTokenId500;
export declare type GetNftOrderCollectionById200 = {
    status: 200;
    value: NftCollection;
};
export declare type GetNftOrderCollectionById404 = {
    status: 404;
    value: EthereumApiErrorEntityNotFound;
};
export declare type GetNftOrderCollectionById400 = {
    status: 400;
    value: EthereumApiErrorBadRequest;
};
export declare type GetNftOrderCollectionById500 = {
    status: 500;
    value: EthereumApiErrorServerError;
};
export declare type GetNftOrderCollectionByIdResponse = GetNftOrderCollectionById200 | GetNftOrderCollectionById404 | GetNftOrderCollectionById400 | GetNftOrderCollectionById500;
export declare type SearchNftOrderAllCollections200 = {
    status: 200;
    value: NftCollections;
};
export declare type SearchNftOrderAllCollections400 = {
    status: 400;
    value: EthereumApiErrorBadRequest;
};
export declare type SearchNftOrderAllCollections500 = {
    status: 500;
    value: EthereumApiErrorServerError;
};
export declare type SearchNftOrderAllCollectionsResponse = SearchNftOrderAllCollections200 | SearchNftOrderAllCollections400 | SearchNftOrderAllCollections500;
export declare type SearchNftOrderCollectionsByOwner200 = {
    status: 200;
    value: NftCollections;
};
export declare type SearchNftOrderCollectionsByOwner400 = {
    status: 400;
    value: EthereumApiErrorBadRequest;
};
export declare type SearchNftOrderCollectionsByOwner500 = {
    status: 500;
    value: EthereumApiErrorServerError;
};
export declare type SearchNftOrderCollectionsByOwnerResponse = SearchNftOrderCollectionsByOwner200 | SearchNftOrderCollectionsByOwner400 | SearchNftOrderCollectionsByOwner500;
