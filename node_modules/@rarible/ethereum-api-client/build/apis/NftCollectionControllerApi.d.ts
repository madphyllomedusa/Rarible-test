/**
 * OpenAPI definition
 * Indexers use OpenAPI to describe APIs (and events). Clients (Kotlin, TypeScript, etc.) and server controller interfaces automatically generated using YAML OpenAPI files.
 *
 * The version of the OpenAPI document: v0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { EthereumApiErrorBadRequest, EthereumApiErrorEntityNotFound, EthereumApiErrorServerError, NftCollection, NftCollectionStats, NftCollections, NftTokenId } from '../models';
export interface GenerateNftTokenIdRequest {
    collection: string;
    minter: string;
}
export interface GetNftCollectionByIdRequest {
    collection: string;
}
export interface GetNftCollectionStatsRequest {
    collection: string;
}
export interface ResetNftCollectionMetaByIdRequest {
    collection: string;
}
export interface SearchNftAllCollectionsRequest {
    continuation?: string;
    size?: number;
}
export interface SearchNftCollectionsByOwnerRequest {
    owner: string;
    continuation?: string;
    size?: number;
}
/**
 * no description
 */
export declare class NftCollectionControllerApi extends runtime.BaseAPI {
    /**
     * Returns next available tokenId for minter
     */
    generateNftTokenIdRaw(requestParameters: GenerateNftTokenIdRequest): Promise<GenerateNftTokenIdResponse>;
    /**
     * Returns next available tokenId for minter
     */
    generateNftTokenId(requestParameters: GenerateNftTokenIdRequest): Promise<NftTokenId>;
    /**
     * Returns collection by address
     */
    getNftCollectionByIdRaw(requestParameters: GetNftCollectionByIdRequest): Promise<GetNftCollectionByIdResponse>;
    /**
     * Returns collection by address
     */
    getNftCollectionById(requestParameters: GetNftCollectionByIdRequest): Promise<NftCollection>;
    /**
     * Returns collection by address
     */
    getNftCollectionStatsRaw(requestParameters: GetNftCollectionStatsRequest): Promise<GetNftCollectionStatsResponse>;
    /**
     * Returns collection by address
     */
    getNftCollectionStats(requestParameters: GetNftCollectionStatsRequest): Promise<NftCollectionStats>;
    /**
     * Deletes the NFT collection meta by identifier
     */
    resetNftCollectionMetaByIdRaw(requestParameters: ResetNftCollectionMetaByIdRequest): Promise<ResetNftCollectionMetaByIdResponse>;
    /**
     * Deletes the NFT collection meta by identifier
     */
    resetNftCollectionMetaById(requestParameters: ResetNftCollectionMetaByIdRequest): Promise<void>;
    /**
     * Returns all NFT collections
     */
    searchNftAllCollectionsRaw(requestParameters: SearchNftAllCollectionsRequest): Promise<SearchNftAllCollectionsResponse>;
    /**
     * Returns all NFT collections
     */
    searchNftAllCollections(requestParameters: SearchNftAllCollectionsRequest): Promise<NftCollections>;
    /**
     * Returns collection by owner
     */
    searchNftCollectionsByOwnerRaw(requestParameters: SearchNftCollectionsByOwnerRequest): Promise<SearchNftCollectionsByOwnerResponse>;
    /**
     * Returns collection by owner
     */
    searchNftCollectionsByOwner(requestParameters: SearchNftCollectionsByOwnerRequest): Promise<NftCollections>;
}
export declare type GenerateNftTokenId200 = {
    status: 200;
    value: NftTokenId;
};
export declare type GenerateNftTokenId400 = {
    status: 400;
    value: EthereumApiErrorBadRequest;
};
export declare type GenerateNftTokenId500 = {
    status: 500;
    value: EthereumApiErrorServerError;
};
export declare type GenerateNftTokenIdResponse = GenerateNftTokenId200 | GenerateNftTokenId400 | GenerateNftTokenId500;
export declare type GetNftCollectionById200 = {
    status: 200;
    value: NftCollection;
};
export declare type GetNftCollectionById404 = {
    status: 404;
    value: EthereumApiErrorEntityNotFound;
};
export declare type GetNftCollectionById400 = {
    status: 400;
    value: EthereumApiErrorBadRequest;
};
export declare type GetNftCollectionById500 = {
    status: 500;
    value: EthereumApiErrorServerError;
};
export declare type GetNftCollectionByIdResponse = GetNftCollectionById200 | GetNftCollectionById404 | GetNftCollectionById400 | GetNftCollectionById500;
export declare type GetNftCollectionStats200 = {
    status: 200;
    value: NftCollectionStats;
};
export declare type GetNftCollectionStats404 = {
    status: 404;
    value: EthereumApiErrorEntityNotFound;
};
export declare type GetNftCollectionStats400 = {
    status: 400;
    value: EthereumApiErrorBadRequest;
};
export declare type GetNftCollectionStats500 = {
    status: 500;
    value: EthereumApiErrorServerError;
};
export declare type GetNftCollectionStatsResponse = GetNftCollectionStats200 | GetNftCollectionStats404 | GetNftCollectionStats400 | GetNftCollectionStats500;
export declare type ResetNftCollectionMetaById200 = {
    status: 200;
};
export declare type ResetNftCollectionMetaById400 = {
    status: 400;
    value: EthereumApiErrorBadRequest;
};
export declare type ResetNftCollectionMetaById500 = {
    status: 500;
    value: EthereumApiErrorServerError;
};
export declare type ResetNftCollectionMetaByIdResponse = ResetNftCollectionMetaById200 | ResetNftCollectionMetaById400 | ResetNftCollectionMetaById500;
export declare type SearchNftAllCollections200 = {
    status: 200;
    value: NftCollections;
};
export declare type SearchNftAllCollections400 = {
    status: 400;
    value: EthereumApiErrorBadRequest;
};
export declare type SearchNftAllCollections500 = {
    status: 500;
    value: EthereumApiErrorServerError;
};
export declare type SearchNftAllCollectionsResponse = SearchNftAllCollections200 | SearchNftAllCollections400 | SearchNftAllCollections500;
export declare type SearchNftCollectionsByOwner200 = {
    status: 200;
    value: NftCollections;
};
export declare type SearchNftCollectionsByOwner400 = {
    status: 400;
    value: EthereumApiErrorBadRequest;
};
export declare type SearchNftCollectionsByOwner500 = {
    status: 500;
    value: EthereumApiErrorServerError;
};
export declare type SearchNftCollectionsByOwnerResponse = SearchNftCollectionsByOwner200 | SearchNftCollectionsByOwner400 | SearchNftCollectionsByOwner500;
