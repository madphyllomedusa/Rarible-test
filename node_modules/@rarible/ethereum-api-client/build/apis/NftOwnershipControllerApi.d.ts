/**
 * OpenAPI definition
 * Indexers use OpenAPI to describe APIs (and events). Clients (Kotlin, TypeScript, etc.) and server controller interfaces automatically generated using YAML OpenAPI files.
 *
 * The version of the OpenAPI document: v0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { EthereumApiErrorBadRequest, EthereumApiErrorEntityNotFound, EthereumApiErrorServerError, NftOwnership, NftOwnerships } from '../models';
export interface GetNftAllOwnershipsRequest {
    continuation?: string;
    size?: number;
    showDeleted?: boolean;
}
export interface GetNftOwnershipByIdRequest {
    ownershipId: string;
    showDeleted?: boolean;
}
export interface GetNftOwnershipsByItemRequest {
    contract: string;
    tokenId: string;
    continuation?: string;
    size?: number;
}
export interface GetNftOwnershipsByOwnerRequest {
    owner: string;
    continuation?: string;
    size?: number;
}
/**
 * no description
 */
export declare class NftOwnershipControllerApi extends runtime.BaseAPI {
    /**
     */
    getNftAllOwnershipsRaw(requestParameters: GetNftAllOwnershipsRequest): Promise<GetNftAllOwnershipsResponse>;
    /**
     */
    getNftAllOwnerships(requestParameters: GetNftAllOwnershipsRequest): Promise<NftOwnerships>;
    /**
     */
    getNftOwnershipByIdRaw(requestParameters: GetNftOwnershipByIdRequest): Promise<GetNftOwnershipByIdResponse>;
    /**
     */
    getNftOwnershipById(requestParameters: GetNftOwnershipByIdRequest): Promise<NftOwnership>;
    /**
     */
    getNftOwnershipsByItemRaw(requestParameters: GetNftOwnershipsByItemRequest): Promise<GetNftOwnershipsByItemResponse>;
    /**
     */
    getNftOwnershipsByItem(requestParameters: GetNftOwnershipsByItemRequest): Promise<NftOwnerships>;
    /**
     */
    getNftOwnershipsByOwnerRaw(requestParameters: GetNftOwnershipsByOwnerRequest): Promise<GetNftOwnershipsByOwnerResponse>;
    /**
     */
    getNftOwnershipsByOwner(requestParameters: GetNftOwnershipsByOwnerRequest): Promise<NftOwnerships>;
}
export declare type GetNftAllOwnerships200 = {
    status: 200;
    value: NftOwnerships;
};
export declare type GetNftAllOwnerships400 = {
    status: 400;
    value: EthereumApiErrorBadRequest;
};
export declare type GetNftAllOwnerships500 = {
    status: 500;
    value: EthereumApiErrorServerError;
};
export declare type GetNftAllOwnershipsResponse = GetNftAllOwnerships200 | GetNftAllOwnerships400 | GetNftAllOwnerships500;
export declare type GetNftOwnershipById200 = {
    status: 200;
    value: NftOwnership;
};
export declare type GetNftOwnershipById404 = {
    status: 404;
    value: EthereumApiErrorEntityNotFound;
};
export declare type GetNftOwnershipById400 = {
    status: 400;
    value: EthereumApiErrorBadRequest;
};
export declare type GetNftOwnershipById500 = {
    status: 500;
    value: EthereumApiErrorServerError;
};
export declare type GetNftOwnershipByIdResponse = GetNftOwnershipById200 | GetNftOwnershipById404 | GetNftOwnershipById400 | GetNftOwnershipById500;
export declare type GetNftOwnershipsByItem200 = {
    status: 200;
    value: NftOwnerships;
};
export declare type GetNftOwnershipsByItem400 = {
    status: 400;
    value: EthereumApiErrorBadRequest;
};
export declare type GetNftOwnershipsByItem500 = {
    status: 500;
    value: EthereumApiErrorServerError;
};
export declare type GetNftOwnershipsByItemResponse = GetNftOwnershipsByItem200 | GetNftOwnershipsByItem400 | GetNftOwnershipsByItem500;
export declare type GetNftOwnershipsByOwner200 = {
    status: 200;
    value: NftOwnerships;
};
export declare type GetNftOwnershipsByOwner400 = {
    status: 400;
    value: EthereumApiErrorBadRequest;
};
export declare type GetNftOwnershipsByOwner500 = {
    status: 500;
    value: EthereumApiErrorServerError;
};
export declare type GetNftOwnershipsByOwnerResponse = GetNftOwnershipsByOwner200 | GetNftOwnershipsByOwner400 | GetNftOwnershipsByOwner500;
