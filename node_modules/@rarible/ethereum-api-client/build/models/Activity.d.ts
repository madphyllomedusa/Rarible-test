import { Address } from "@rarible/types";
import { Asset } from "./Asset";
import { AssetType } from "./AssetType";
import { Auction } from "./Auction";
import { AuctionBid } from "./AuctionBid";
import { BigNumber } from "@rarible/types";
import { OrderActivityMatchSide } from "./OrderActivityMatchSide";
import { Word } from "@rarible/types";
export declare type Activity = OrderActivity | NftActivity | AuctionActivity;
export declare enum OrderActivitySource {
    RARIBLE = "RARIBLE",
    OPEN_SEA = "OPEN_SEA",
    CRYPTO_PUNKS = "CRYPTO_PUNKS"
}
export declare type OrderActivity = OrderActivityMatch | OrderActivityBid | OrderActivityList | OrderActivityCancelBid | OrderActivityCancelList;
export declare enum OrderActivityMatchType {
    SELL = "SELL",
    ACCEPT_BID = "ACCEPT_BID"
}
export declare type OrderActivityMatch = {
    "@type": "match";
    id: string;
    date: string;
    source: OrderActivitySource;
    reverted?: boolean;
    left: OrderActivityMatchSide;
    right: OrderActivityMatchSide;
    price: BigNumber;
    priceUsd?: BigNumber;
    transactionHash: Word;
    blockHash: Word;
    blockNumber: number;
    logIndex: number;
    type?: OrderActivityMatchType;
};
export declare type OrderActivityBid = {
    "@type": "bid";
    id: string;
    date: string;
    source: OrderActivitySource;
    reverted?: boolean;
    hash: Word;
    maker: Address;
    make: Asset;
    take: Asset;
    price: BigNumber;
    priceUsd?: BigNumber;
};
export declare type OrderActivityList = {
    "@type": "list";
    id: string;
    date: string;
    source: OrderActivitySource;
    reverted?: boolean;
    hash: Word;
    maker: Address;
    make: Asset;
    take: Asset;
    price: BigNumber;
    priceUsd?: BigNumber;
};
export declare type OrderActivityCancelBid = {
    "@type": "cancel_bid";
    id: string;
    date: string;
    source: OrderActivitySource;
    reverted?: boolean;
    hash: Word;
    maker: Address;
    make: AssetType;
    take: AssetType;
    transactionHash: Word;
    blockHash: Word;
    blockNumber: number;
    logIndex: number;
};
export declare type OrderActivityCancelList = {
    "@type": "cancel_list";
    id: string;
    date: string;
    source: OrderActivitySource;
    reverted?: boolean;
    hash: Word;
    maker: Address;
    make: AssetType;
    take: AssetType;
    transactionHash: Word;
    blockHash: Word;
    blockNumber: number;
    logIndex: number;
};
export declare type NftActivity = Mint | Burn | Transfer;
export declare type Mint = {
    "@type": "mint";
    owner: Address;
    contract: Address;
    tokenId: BigNumber;
    value: BigNumber;
    transactionHash: Word;
    blockHash: Word;
    blockNumber: number;
    logIndex: number;
    id: string;
    date: string;
    reverted?: boolean;
};
export declare type Burn = {
    "@type": "burn";
    owner: Address;
    contract: Address;
    tokenId: BigNumber;
    value: BigNumber;
    transactionHash: Word;
    blockHash: Word;
    blockNumber: number;
    logIndex: number;
    id: string;
    date: string;
    reverted?: boolean;
};
export declare type Transfer = {
    "@type": "transfer";
    owner: Address;
    contract: Address;
    tokenId: BigNumber;
    value: BigNumber;
    transactionHash: Word;
    blockHash: Word;
    blockNumber: number;
    logIndex: number;
    id: string;
    date: string;
    reverted?: boolean;
    from: Address;
    purchase?: boolean;
};
export declare enum AuctionActivitySource {
    RARIBLE = "RARIBLE"
}
export declare type AuctionActivity = AuctionActivityOpen | AuctionActivityBid | AuctionActivityFinish | AuctionActivityCancel | AuctionActivityStart | AuctionActivityEnd;
export declare type AuctionActivityOpen = {
    "@type": "auction_open";
    id: string;
    date: string;
    source: AuctionActivitySource;
    auction: Auction;
    reverted?: boolean;
    transactionHash: Word;
    blockHash: Word;
    blockNumber: number;
    logIndex: number;
};
export declare type AuctionActivityBid = {
    "@type": "auction_bid";
    id: string;
    date: string;
    source: AuctionActivitySource;
    auction: Auction;
    reverted?: boolean;
    bid: AuctionBid;
    transactionHash: Word;
    blockHash: Word;
    blockNumber: number;
    logIndex: number;
};
export declare type AuctionActivityFinish = {
    "@type": "auction_finish";
    id: string;
    date: string;
    source: AuctionActivitySource;
    auction: Auction;
    reverted?: boolean;
    transactionHash: Word;
    blockHash: Word;
    blockNumber: number;
    logIndex: number;
};
export declare type AuctionActivityCancel = {
    "@type": "auction_cancel";
    id: string;
    date: string;
    source: AuctionActivitySource;
    auction: Auction;
    reverted?: boolean;
    transactionHash: Word;
    blockHash: Word;
    blockNumber: number;
    logIndex: number;
};
export declare type AuctionActivityStart = {
    "@type": "auction_start";
    id: string;
    date: string;
    source: AuctionActivitySource;
    auction: Auction;
    reverted?: boolean;
};
export declare type AuctionActivityEnd = {
    "@type": "auction_end";
    id: string;
    date: string;
    source: AuctionActivitySource;
    auction: Auction;
    reverted?: boolean;
};
