"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.approveErc20 = void 0;
var tslib_1 = require("tslib");
var bn_1 = require("@rarible/utils/build/bn");
var erc20_1 = require("./contracts/erc20");
var infiniteBn = (0, bn_1.toBn)(2).pow(256).minus(1);
function approveErc20(ethereum, send, contract, owner, operator, value, infinite) {
    if (infinite === void 0) { infinite = true; }
    return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
        var erc20, allowance, _a, bnValue;
        return (0, tslib_1.__generator)(this, function (_b) {
            switch (_b.label) {
                case 0:
                    if (!ethereum) {
                        throw new Error("Wallet undefined");
                    }
                    erc20 = (0, erc20_1.createErc20Contract)(ethereum, contract);
                    _a = bn_1.toBn;
                    return [4 /*yield*/, erc20.functionCall("allowance", owner, operator).call()];
                case 1:
                    allowance = _a.apply(void 0, [_b.sent()]);
                    bnValue = (0, bn_1.toBn)(value);
                    if (allowance.lt(bnValue)) {
                        if (!infinite) {
                            return [2 /*return*/, send(erc20.functionCall("approve", operator, bnValue.toFixed()))];
                        }
                        else {
                            return [2 /*return*/, send(erc20.functionCall("approve", operator, infiniteBn.toFixed()))];
                        }
                    }
                    else {
                        return [2 /*return*/, undefined];
                    }
                    return [2 /*return*/];
            }
        });
    });
}
exports.approveErc20 = approveErc20;
