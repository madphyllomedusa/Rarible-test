import type { Ethereum, EthereumTransaction } from "@rarible/ethereum-provider";
import type { CryptoPunksAssetType } from "@rarible/ethereum-api-client";
import type { Maybe } from "@rarible/types/build/maybe";
import type { ExchangeAddresses } from "../config/type";
import type { SendFunction } from "../common/send-transaction";
import type { SimpleCryptoPunkOrder, SimpleOpenSeaV1Order, SimpleOrder } from "./types";
import type { CheckLazyOrderPart } from "./check-lazy-order";
export declare function cancel(checkLazyOrder: (form: CheckLazyOrderPart) => Promise<CheckLazyOrderPart>, ethereum: Maybe<Ethereum>, send: SendFunction, config: ExchangeAddresses, checkWalletChainId: () => Promise<boolean>, orderToCheck: SimpleOrder): Promise<EthereumTransaction>;
export declare function cancelOpenseaOrderV1(ethereum: Ethereum, send: SendFunction, order: SimpleOpenSeaV1Order): Promise<EthereumTransaction>;
export declare function cancelCryptoPunksOrder(ethereum: Ethereum, send: SendFunction, order: SimpleCryptoPunkOrder): Promise<EthereumTransaction>;
export declare function cancelCryptoPunkOrderByAsset(ethereum: Ethereum, send: SendFunction, methodName: string, assetType: CryptoPunksAssetType): Promise<EthereumTransaction>;
