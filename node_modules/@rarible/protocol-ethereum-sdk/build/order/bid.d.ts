import type { Erc20AssetType, EthAssetType, Order, OrderForm } from "@rarible/ethereum-api-client";
import type { BigNumberValue } from "@rarible/utils/build/bn";
import { Action } from "@rarible/action";
import type { HasOrder, HasPrice, OrderRequest, UpsertOrder } from "./upsert-order";
import type { AssetTypeRequest, AssetTypeResponse } from "./check-asset-type";
import type { SimpleOrder } from "./types";
export declare type BidRequest = {
    makeAssetType: EthAssetType | Erc20AssetType;
    amount: number;
    takeAssetType: AssetTypeRequest;
} & HasPrice & OrderRequest;
export declare type BidOrderOrderStageId = "approve" | "sign";
export declare type BidOrderAction = Action<BidOrderOrderStageId, BidRequest, Order>;
export declare type BidUpdateRequest = HasOrder & HasPrice;
export declare type BidUpdateOrderAction = Action<BidOrderOrderStageId, BidUpdateRequest, Order>;
export declare class OrderBid {
    private readonly upserter;
    private readonly checkAssetType;
    private readonly checkWalletChainId;
    constructor(upserter: UpsertOrder, checkAssetType: (asset: AssetTypeRequest) => Promise<AssetTypeResponse>, checkWalletChainId: () => Promise<boolean>);
    readonly bid: BidOrderAction;
    readonly update: BidUpdateOrderAction;
    private getBidForm;
    prepareOrderUpdateForm(order: SimpleOrder, price: BigNumberValue): Promise<OrderForm>;
}
