import type { Maybe } from "@rarible/types/build/maybe";
import type { Ethereum } from "@rarible/ethereum-provider";
import type { BigNumberValue } from "@rarible/utils/build/bn";
import type { EthereumTransaction } from "@rarible/ethereum-provider";
import type { AssetType } from "@rarible/ethereum-api-client";
import type { Address } from "@rarible/types";
import type { EthereumConfig } from "../config/type";
import type { SendFunction } from "../common/send-transaction";
export declare class ConvertWeth {
    private ethereum;
    private readonly send;
    private readonly config;
    constructor(ethereum: Maybe<Ethereum>, send: SendFunction, config: EthereumConfig);
    private convertEthToWeth;
    private convertWethToEth;
    convert(from: AssetType, to: AssetType, value: BigNumberValue): Promise<EthereumTransaction>;
    getWethContractAddress(): Address;
}
