import type { Address, Binary } from "@rarible/ethereum-api-client";
import type { BigNumber } from "@rarible/types";
export declare enum OrderOpenSeaV1DataV1FeeMethod {
    PROTOCOL_FEE = 0,
    SPLIT_FEE = 1
}
export declare enum OrderOpenSeaV1DataV1Side {
    BUY = 0,
    SELL = 1
}
export declare enum OrderOpenSeaV1DataV1SaleKind {
    FIXED_PRICE = 0,
    DUTCH_AUCTION = 1
}
export declare enum OrderOpenSeaV1DataV1HowToCall {
    CALL = 0,
    DELEGATE_CALL = 1
}
export declare type OpenSeaOrderDTO = {
    exchange: Address;
    maker: Address;
    taker: Address;
    makerRelayerFee: BigNumber;
    takerRelayerFee: BigNumber;
    makerProtocolFee: BigNumber;
    takerProtocolFee: BigNumber;
    feeRecipient: Address;
    feeMethod: OrderOpenSeaV1DataV1FeeMethod;
    side: OrderOpenSeaV1DataV1Side;
    saleKind: OrderOpenSeaV1DataV1SaleKind;
    target: Address;
    howToCall: OrderOpenSeaV1DataV1HowToCall;
    calldata: Binary;
    replacementPattern: Binary;
    staticTarget: Address;
    staticExtradata: Binary;
    paymentToken: Address;
    basePrice: BigNumber;
    extra: BigNumber;
    listingTime: BigNumber;
    expirationTime: BigNumber;
    salt: BigNumber;
};
