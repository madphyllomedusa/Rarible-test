"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.cancelAuction = void 0;
var tslib_1 = require("tslib");
var auction_1 = require("./contracts/auction");
function cancelAuction(ethereum, send, config, apis, hash) {
    return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
        var auction, sender;
        return (0, tslib_1.__generator)(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (!ethereum) {
                        throw new Error("Wallet is undefined");
                    }
                    return [4 /*yield*/, apis.auction.getAuctionByHash({ hash: hash })];
                case 1:
                    auction = _a.sent();
                    return [4 /*yield*/, ethereum.getFrom()];
                case 2:
                    sender = _a.sent();
                    if (auction.seller.toLowerCase() !== sender.toLowerCase()) {
                        throw new Error("This operation is allowed only for auction owner");
                    }
                    if (auction.lastBid) {
                        throw new Error("Can't cancel auction with bid");
                    }
                    return [2 /*return*/, send((0, auction_1.createEthereumAuctionContract)(ethereum, config.auction)
                            .functionCall("cancel", auction.auctionId))];
            }
        });
    });
}
exports.cancelAuction = cancelAuction;
