"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeployErc721 = void 0;
var tslib_1 = require("tslib");
var types_1 = require("@rarible/types");
var check_chain_id_1 = require("../order/check-chain-id");
var rarible_factory_1 = require("./contracts/erc721/deploy/rarible-factory");
var rarible_user_factory_1 = require("./contracts/erc721/deploy/rarible-user-factory");
var DeployErc721 = /** @class */ (function () {
    function DeployErc721(ethereum, send, config) {
        this.ethereum = ethereum;
        this.send = send;
        this.config = config;
        this.deployToken = this.deployToken.bind(this);
        this.deployUserToken = this.deployUserToken.bind(this);
    }
    DeployErc721.prototype.deployToken = function (name, symbol, baseURI, contractURI) {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var contract, salt;
            var _a;
            return (0, tslib_1.__generator)(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!this.ethereum) {
                            throw new Error("Wallet undefined");
                        }
                        contract = (0, rarible_factory_1.createErc721FactoryContract)(this.ethereum, this.config.factories.erc721);
                        salt = (0, types_1.randomWord)();
                        _a = {};
                        return [4 /*yield*/, this.send(contract.functionCall("createToken", name, symbol, baseURI, contractURI, salt))];
                    case 1:
                        _a.tx = _b.sent();
                        return [4 /*yield*/, this.getContractAddress(name, symbol, baseURI, contractURI, salt)];
                    case 2: return [2 /*return*/, (_a.address = _b.sent(),
                            _a)];
                }
            });
        });
    };
    DeployErc721.prototype.getContractAddress = function (name, symbol, baseURI, contractURI, salt) {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var contract;
            return (0, tslib_1.__generator)(this, function (_a) {
                if (!this.ethereum) {
                    throw new Error("Wallet undefined");
                }
                contract = (0, rarible_factory_1.createErc721FactoryContract)(this.ethereum, this.config.factories.erc721);
                return [2 /*return*/, contract.functionCall("getAddress", name, symbol, baseURI, contractURI, salt).call()];
            });
        });
    };
    DeployErc721.prototype.deployUserToken = function (name, symbol, baseURI, contractURI, operators) {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var contract, salt;
            var _a;
            return (0, tslib_1.__generator)(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, (0, check_chain_id_1.checkChainId)(this.ethereum, this.config)];
                    case 1:
                        _b.sent();
                        if (!this.ethereum) {
                            throw new Error("Wallet undefined");
                        }
                        contract = (0, rarible_user_factory_1.createErc721UserFactoryContract)(this.ethereum, this.config.factories.erc721);
                        salt = (0, types_1.randomWord)();
                        _a = {};
                        return [4 /*yield*/, this.send(contract.functionCall("createToken", name, symbol, baseURI, contractURI, operators, salt))];
                    case 2:
                        _a.tx = _b.sent();
                        return [4 /*yield*/, this.getUserContractAddress(name, symbol, baseURI, contractURI, operators, salt)];
                    case 3: return [2 /*return*/, (_a.address = _b.sent(),
                            _a)];
                }
            });
        });
    };
    DeployErc721.prototype.getUserContractAddress = function (name, symbol, baseURI, contractURI, operators, salt) {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var contract;
            return (0, tslib_1.__generator)(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, (0, check_chain_id_1.checkChainId)(this.ethereum, this.config)];
                    case 1:
                        _a.sent();
                        if (!this.ethereum) {
                            throw new Error("Wallet undefined");
                        }
                        contract = (0, rarible_user_factory_1.createErc721UserFactoryContract)(this.ethereum, this.config.factories.erc721);
                        return [2 /*return*/, contract.functionCall("getAddress", name, symbol, baseURI, contractURI, operators, salt).call()];
                }
            });
        });
    };
    return DeployErc721;
}());
exports.DeployErc721 = DeployErc721;
