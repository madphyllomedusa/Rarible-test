import type { AbstractLogger, LoggableValue } from "../domain";
export declare type RemoteLoggerConfig = {
    initialContext: Promise<Record<string, string>>;
    context: Record<string, string>;
    dropBatchInterval: number;
    maxByteSize: number;
};
export declare class RemoteLogger implements AbstractLogger {
    private readonly config;
    private readonly batchManager;
    constructor(handler: (values: Record<string, string>[]) => Promise<void>, config: Partial<RemoteLoggerConfig>);
    debug(...params: LoggableValue[]): void;
    error(...params: LoggableValue[]): void;
    info(...params: LoggableValue[]): void;
    trace(...params: LoggableValue[]): void;
    warn(...params: LoggableValue[]): void;
    private log;
    private withContext;
    private getMessage;
}
